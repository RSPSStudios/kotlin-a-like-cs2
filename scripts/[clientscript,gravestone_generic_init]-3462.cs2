// 3462 clientscript
fun gravestone_generic_init(component0: Component, component1: Component, component2: Component, component3: Component, component4: Component, component5: Component, component6: Component, component7: Component, component8: Component, component9: Component, component10: Component, component11: Component, component12: Component, component13: Component, component14: Component, component15: Component, int16: Int, component17: Component) {

	val int18: Int = ~steelborder(component1, ~gravestone_generic_title, 3)
	if (cc_find(component1, int18) = ^true) {
		cc_setoninvtransmit({
			gravestone_generic_title(event_com, event_comsubid){inv_525}
		})
	}
	val int19: Int = 0
	val graphic20: Graphic = null
	if (~on_mobile = true) {
		if_setsize(33, 33, ^setsize_abs, ^setsize_abs, component2)
		if_setposition(1, 1, ^setpos_abs_right, ^setpos_abs_top, component2)
		graphic20 = "steelborder_close_button,0"
		if_setgraphic(graphic20, component2)
		if_setonmouseleave({
			graphic_swapper(event_com, graphic20)
		}, component2)
		graphic20 = "steelborder_close_button,1"
		if_setonmouseover({
			graphic_swapper(event_com, graphic20)
		}, component2)
		int19 = calc(165 - (23 + 30))
	} else {
		if_setsize(26, 23, ^setsize_abs, ^setsize_abs, component2)
		if_setposition(3, 6, ^setpos_abs_right, ^setpos_abs_top, component2)
		graphic20 = "close_buttons,0"
		if_setgraphic(graphic20, component2)
		if_setonmouseleave({
			graphic_swapper(event_com, graphic20)
		}, component2)
		graphic20 = "close_buttons,1"
		if_setonmouseover({
			graphic_swapper(event_com, graphic20)
		}, component2)
	}
	if_setop(1, "Close", component2)
	if_setonop({
		opsound(event_opindex, 2)
	}, component2)
	if_setopkey(1, 13, 0, component2)
	if_setop(1, "Take-All", component8)
	~gravestone_generic_resetbutton(component8, component9)
	~gravestone_generic_resetbutton(component14, component15)
	~scrollbar_vertical(component7, component6, "scrollbar_dragger_v2,3", "scrollbar_dragger_v2,0", "scrollbar_dragger_v2,1", "scrollbar_dragger_v2,2", "scrollbar_v2,0", "scrollbar_v2,1")
	~scrollbar_vertical(component13, component12, "scrollbar_dragger_v2,3", "scrollbar_dragger_v2,0", "scrollbar_dragger_v2,1", "scrollbar_dragger_v2,2", "scrollbar_v2,0", "scrollbar_v2,1")
	cc_deleteall(component6)
	cc_deleteall(component12)
	int18 = 0
	while (int18 < 120) {
		cc_create(component6, ^iftype_graphic, int18)
		.cc_create(component12, ^iftype_graphic, int18)
		cc_setsize(36, 32, ^setsize_abs, ^setsize_abs)
		.cc_setsize(36, 32, ^setsize_abs, ^setsize_abs)
		cc_sethide(true)
		.cc_sethide(true)
		cc_setoutline(1)
		.cc_setoutline(1)
		cc_setgraphicshadow(0x333333)
		.cc_setgraphicshadow(0x333333)
		cc_setop(1, "Take")
		.cc_setop(1, "Take")
		cc_setop(10, "Examine")
		.cc_setop(10, "Examine")
		cc_setonop({
			cc_settrans_temporarily(event_com, event_comsubid, 100, 0)
		})
		.cc_setonop({
			cc_settrans_temporarily(event_com, event_comsubid, 100, 0)
		})
		int18 = calc(int18 + 1)
	}
	val int21: Int = calc(120 * 2)
	while (int18 < int21) {
		cc_create(component12, ^iftype_text, int18)
		cc_setsize(36, 12, ^setsize_abs, ^setsize_abs)
		cc_sethide(true)
		cc_setcolour(0xff981f)
		cc_settextfont(p11_full)
		cc_settextalign(^settextalign_centre, ^settextalign_centre, 0)
		cc_settextshadow(true)
		int18 = calc(int18 + 1)
	}
	if_settext(~gravestone_generic_parsefee(-1), component11)
	if_settext(~gravestone_generic_parsecoffer(-1), component17)
	if_setontimer({
		gravestone_generic_resynchdata(-1, component11, -1, component17, component14, component15)
	}, component17)
	cc_deleteall(component0)
	int18 = 0
	while (int18 < 8) {
		cc_create(component0, ^iftype_graphic, int18)
		cc_sethide(false)
		cc_settiling(true)
		cc_settrans(255)
		cc_setonmouserepeat({
			cc_settrans(event_com, event_comsubid, 200, null)
		})
		cc_setonmouseleave({
			cc_settrans(event_com, event_comsubid, 255, null)
		})
		cc_setdraggable(component0, -1)
		cc_setdragdeadzone(1)
		cc_setdragdeadtime(5)
		int18 = calc(int18 + 1)
	}
	cc_deleteall(component4)
	int18 = 0
	while (int18 < 4) {
		cc_create(component4, ^iftype_rectangle, int18)
		cc_sethide(false)
		cc_setsize(calc(int18 * 2), calc(int18 * 2), ^setsize_minus, ^setsize_minus)
		cc_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_centre)
		cc_setcolour(0x9f9f9f)
		cc_setfill(false)
		cc_settrans(calc(100 + int18 * 10))
		int18 = calc(int18 + 1)
	}
	val int22: Int = calc(12 + parawidth(~gravestone_generic_parsecoffer(^max_32bit_int), 512, p11_full) + 2 + 10)
	val int23: Int = calc(14 + ~max(32 + 4, 42) + 2)
	val int24: Int = 109
	val int25: Int = calc(40 + int23 + int24 + 10)
	if (VARCINT[395] < int22) {
		VARCINT[395] = scale(2, 3, 512)
	}
	if (VARCINT[396] < int25) {
		VARCINT[396] = scale(8, 9, 334)
	}
	if (VARCINT[397] < 0) {
		VARCINT[397] = calc((if_getwidth(component0) - VARCINT[395]) / 2)
	}
	if (VARCINT[398] < int19) {
		VARCINT[398] = ~max(int19, calc((if_getheight(component0) - VARCINT[396]) / 2))
	}
	~gravestone_generic_window_set(component0, component3, component4, int19, int22, int25, component5, int23, component10, int24, component6, component7, component12, component13)
	if_setoninvtransmit({
		gravestone_generic_window_set(component0, component3, component4, int19, int22, int25, component5, int23, component10, int24, component6, component7, component12, component13){inv_525}
	}, component0)
	if_setonvartransmit({
		gravestone_generic_window_set(component0, component3, component4, int19, int22, int25, component5, int23, component10, int24, component6, component7, component12, component13){VARP[1574], VARP[499]}
	}, component0)
	~gravestone_generic_size_handler(component0, component3, component4, int19, int22, int25, component5, int23, component10, int24, component6, component7, component12, component13, ^min_32bit_int, ^min_32bit_int)
	return 
}
