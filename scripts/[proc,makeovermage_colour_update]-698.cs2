// 698 proc
fun makeovermage_colour_update(component0: Component) {

	val int1: Int = 0
	val int2: Int = calc(7 + 1)
	val int3: Int = enum(int, int, enum_998, int2)
	while (int3 ! -1) {
		if (~makeover_unlockedcolour(int2) = 1) {
			int1 = calc(int1 + 1)
		}
		int2 = calc(int2 + 1)
		int3 = enum(int, int, enum_998, int2)
	}
	val int4: Int = ~min(27, calc((if_getheight(component0) - 2) / (7 + 1 + int1)))
	val int5: Int = 1
	val int6: Int = -1
	cc_deleteall(component0)
	val int7: Int = 0
	int2 = enum(int, int, enum_999, int7)
	while (int2 ! -1) {
		cc_create(component0, ^iftype_rectangle, int7)
		if (~makeover_unlockedcolour(int2) = 1) {
			if (int2 = VARP[262]) {
				int6 = int5
			}
			cc_sethide(false)
			cc_setsize(2, int4, ^setsize_minus, ^setsize_abs)
			cc_setposition(1, int5, ^setpos_abs_left, ^setpos_abs_top)
			cc_setfill(true)
			cc_setcolour(enum(int, int, enum_998, int2))
			cc_setop(1, "Select colour")
			cc_setonop {
				makeovermage_colour_op(event_opindex, int2, component0)
			}
			int5 = calc(int5 + int4)
		} else {
			cc_sethide(true)
		}
		int7 = calc(int7 + 1)
		int2 = enum(int, int, enum_999, int7)
	}
	cc_create(component0, ^iftype_rectangle, int7)
	int7 = calc(int7 + 1)
	cc_setsize(0, calc(int5 + 1), ^setsize_minus, ^setsize_abs)
	cc_setposition(0, 0, ^setpos_abs_left, ^setpos_abs_top)
	cc_setfill(false)
	cc_setcolour(^black)
	if (int6 ! -1) {
		cc_create(component0, ^iftype_graphic, int7)
		cc_setsize(16, 16, ^setsize_abs, ^setsize_abs)
		cc_setgraphic("cross")
		cc_setposition(0, calc(int6 - (16 - int4) / 2), ^setpos_abs_centre, ^setpos_abs_top)
	}
	return 
}
