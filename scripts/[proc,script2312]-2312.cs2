// 2312 proc
fun script2312(int0: Int, int1: Int, int2: Int, int3: Int, int4: Int, int5: Int, int6: Int, int7: Int, int8: Int, int9: Int, int10: Int, int11: Int, int12: Int) {

	val int13: Int = calc(int0 - clientclock)
	if (int13 <= 0) {
		cc_setcolour(~rgb_to_hex(int9, int10, int11))
		cc_settrans(int12)
		if (int12 >= 255) {
			cc_sethide(true)
		} else {
			cc_sethide(false)
		}
		if_setontimer(null, interface_28:1)
		return 
	}
	int13 = calc(20 - int13)
	int5 = calc(int1 + int13 * int5)
	if (int9 > int1) {
		int5 = ~min(int5, int9)
	} else if (int9 < int1) {
		int5 = ~max(int5, int9)
	}
	int6 = calc(int2 + int13 * int6)
	if (int10 > int2) {
		int6 = ~min(int6, int10)
	} else if (int10 < int2) {
		int6 = ~max(int6, int10)
	}
	int7 = calc(int3 + int13 * int7)
	if (int11 > int3) {
		int7 = ~min(int7, int11)
	} else if (int11 < int3) {
		int7 = ~max(int7, int11)
	}
	int8 = calc(int4 + int13 * int8)
	if (int12 > int4) {
		int8 = ~min(int8, int12)
	} else if (int12 < int4) {
		int8 = ~max(int8, int12)
	}
	cc_setcolour(~rgb_to_hex(int5, int6, int7))
	cc_settrans(int8)
	cc_sethide(false)
	return 
}
