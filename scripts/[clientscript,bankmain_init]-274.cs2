// 274 clientscript
fun bankmain_init(component0: Component, component1: Component, component2: Component, component3: Component, component4: Component, component5: Component, component6: Component, component7: Component, component8: Component, component9: Component, component10: Component, component11: Component, component12: Component, component13: Component, component14: Component, component15: Component, component16: Component, component17: Component, component18: Component, component19: Component, component20: Component, component21: Component, component22: Component, component23: Component, component24: Component, component25: Component, component26: Component, component27: Component, component28: Component, component29: Component, component30: Component, component31: Component, component32: Component) {

	~steelborder(component1, "", 0)
	val int33: Int = VARCINT[51]
	if (~bankmain_searching = 1) {
		~meslayer_close(1, 1)
	} else if (VARCINT[5] <= 0) {
		VARCSTRING[359] = ""
	}
	~bankmain_search_setbutton(component0, component2, component7, component8, component9, component16, component17, component15, component18, component19, component20, component21, component28, component29, component30, component31, component32)
	if_setonop {
		bankmain_search_toggle(event_opindex, component0, component2, component7, component8, component9, component16, component17, component15, component18, component19, component20, component21, component28, component29, component30, component31, component32)
	}
	cc_deleteall(component8)
	~scrollbar_vertical(component8, component7, "scrollbar_dragger_v2,3", "scrollbar_dragger_v2,0", "scrollbar_dragger_v2,1", "scrollbar_dragger_v2,2", "scrollbar_v2,0", "scrollbar_v2,1")
	~bankmain_swapinsert(component10, component11)
	if_setonvartransmit(component10)  {
		bankmain_swapinsert(component10, component11){VARP[304]}
	}
	~bankmain_toggleplaceholders(component12)
	if_setonvartransmit(component12)  {
		bankmain_toggleplaceholders(component12){VARP[1052]}
	}
	~bankmain_itemnote(component13, component14)
	if_setonvartransmit(component13)  {
		bankmain_itemnote(component13, component14){VARP[115]}
	}
	~bankmain_quantity_buttons(component22, component23, component24, component25, component26)
	if_setonvartransmit(component27)  {
		bankmain_quantity_buttons(component22, component23, component24, component25, component26){VARP[1666], VARP[304]}
	}
	cc_deleteall(component7)
	val int34: Int = 0
	val int35: Int = 0
	while (int35 < 816) {
		cc_create(component7, ^iftype_graphic, int34)
		int34 = calc(int34 + 1)
		cc_setsize(36, 32, ^setsize_abs, ^setsize_abs)
		cc_setgraphicshadow(0x333333)
		cc_setoutline(1)
		cc_setdragdeadzone(5)
		cc_setdragdeadtime(5)
		int35 = calc(int35 + 1)
	}
	val width36: Int = calc(if_getwidth(component7) - 51 - 35)
	int35 = 1
	while (int35 <= 9) {
		cc_create(component7, ^iftype_graphic, int34)
		int34 = calc(int34 + 1)
		cc_setsize(width36, 2, ^setsize_abs, ^setsize_abs)
		cc_setgraphic("tradebacking_dark")
		cc_settiling(true)
		int35 = calc(int35 + 1)
	}
	int35 = 1
	while (int35 <= 9) {
		cc_create(component7, ^iftype_text, int34)
		int34 = calc(int34 + 1)
		cc_setsize(width36, 15, ^setsize_abs, ^setsize_abs)
		cc_settextalign(^settextalign_left, ^settextalign_top, 0)
		cc_settextfont(p11_full)
		cc_setcolour(0xe4d8a2)
		cc_setonmouserepeat {
			cc_colour_swapper(event_com, event_comsubid, ^white)
		}
		cc_setonmouseleave {
			cc_colour_swapper(event_com, event_comsubid, 0xe4d8a2)
		}
		cc_settextshadow(true)
		cc_settext("Tab ${tostring(int35)}")
		cc_setop(1, "View tab")
		cc_setopbase("<col=ff9040>${tostring(int35)}</col>")
		cc_setonop {
			bankmain_switchtab(component0, component2, component7, component8, component9, component16, component17, component15, component18, component19, component20, component21, event_opindex, int35, component28, component29, component30, component31, component32)
		}
		int35 = calc(int35 + 1)
	}
	int35 = 0
	while (int35 <= 9) {
		cc_create(component7, ^iftype_rectangle, int34)
		int34 = calc(int34 + 1)
		cc_setsize(0, 32, ^setsize_abs, ^setsize_abs)
		cc_setfill(true)
		cc_settrans(255)
		int35 = calc(int35 + 1)
	}
	~bankmain_viewbuttons(component4, component0, component2, component3, component7, component8, component9, component16, component17, component15, component18, component19, component20, component21, component4, component5, component6, component28, component29, component30, component31, component32)
	if_setoninvtransmit(component7)  {
		bankmain_build(component0, component2, component7, component8, component9, component16, component17, component15, component18, component19, component20, component21, component28, component29, component30, component31, component32){bank}
	}
	if_setonvartransmit(component7)  {
		bankmain_build(component0, component2, component7, component8, component9, component16, component17, component15, component18, component19, component20, component21, component28, component29, component30, component31, component32){VARP[304], VARP[115], VARP[867], VARP[1052], VARP[1053], VARP[1666], VARP[1141]}
	}
	VARCINT[51] = int33
	val layer37: Component = if_getlayer(component0)
	if (layer37 ! null) {
		~bankmain_size_check(component0, layer37, ^min_32bit_int, ^min_32bit_int, component8, component7)
	}
	cc_deleteall(component19)
	cc_create(component19, ^iftype_model, 0)
	.cc_create(component19, ^iftype_model, 1)
	cc_setsize(0, 0, ^setsize_minus, ^setsize_minus)
	.cc_setsize(0, 0, ^setsize_minus, ^setsize_minus)
	cc_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_centre)
	.cc_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_centre)
	cc_setmodel(melting_pot_9037)
	.cc_setmodel(smoke_9056)
	cc_setmodelangle(15, 300, 141, 220, 0, 3500)
	.cc_setmodelangle(15, 300, 141, 220, 0, 3500)
	.cc_setmodelanim(smoke_2439)
	.cc_sethide(true)
	if_setonmouserepeat {
		script1312(true, component19, component21)
	}
	if_setonmouseleave {
		script1312(false, component19, component21)
	}
	return 
}
