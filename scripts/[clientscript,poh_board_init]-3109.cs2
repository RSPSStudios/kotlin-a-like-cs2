// 3109 clientscript
fun poh_board_init(int0: Int, component1: Component, int2: Int, component3: Component, component4: Component, component5: Component, component6: Component, component7: Component, component8: Component, component9: Component, component10: Component, component11: Component, component12: Component, component13: Component, component14: Component, component15: Component, component16: Component, component17: Component, component18: Component, component19: Component, component20: Component, component21: Component, component22: Component, component23: Component, component24: Component, component25: Component) {

	cc_deleteall(component4)
	cc_deleteall(component5)
	cc_deleteall(component7)
	cc_deleteall(component8)
	cc_deleteall(component9)
	cc_deleteall(component10)
	cc_deleteall(component11)
	cc_deleteall(component12)
	cc_deleteall(component13)
	cc_deleteall(component14)
	cc_deleteall(component15)
	cc_deleteall(component16)
	cc_deleteall(component17)
	cc_deleteall(component18)
	cc_deleteall(component19)
	cc_deleteall(component20)
	cc_deleteall(component1)
	cc_deleteall(component21)
	cc_deleteall(component22)
	cc_deleteall(component23)
	cc_deleteall(component25)
	VARCINT[377] = 0
	cc_create(component1, ^iftype_text, 0)
	cc_setsize(0, 0, ^setsize_minus, ^setsize_minus)
	cc_setposition(0, 0, ^setpos_abs_left, ^setpos_abs_top)
	cc_settext("Loading...")
	cc_settextfont(p12_full)
	cc_settextalign(^settextalign_centre, ^settextalign_centre, 0)
	cc_settextshadow(true)
	cc_setcolour(0xff981f)
	val int26: Int = 25
	if (~on_mobile = true) {
		int26 = 35
	}
	if_setsize(0, int26, ^setsize_minus, ^setsize_abs, component5)
	if_setsize(16, calc(if_getheight(component6) + int26), ^setsize_minus, ^setsize_minus, component3)
	if_setsize(16, calc(if_getheight(component6) + int26), ^setsize_minus, ^setsize_minus, component25)
	if_setsize(16, calc(if_getheight(component6) + int26), ^setsize_abs, ^setsize_minus, component4)
	if_setposition(0, int26, ^setpos_abs_left, ^setpos_abs_top, component3)
	if_setposition(0, int26, ^setpos_abs_left, ^setpos_abs_top, component25)
	if_setposition(0, int26, ^setpos_abs_right, ^setpos_abs_top, component4)
	val int27: Int = 0
	while (int27 <= 200) {
		cc_create(component24, ^iftype_rectangle, int27)
		cc_sethide(false)
		cc_setsize(0, int26, ^setsize_minus, ^setsize_abs)
		cc_setposition(0, calc(int27 * int26), ^setpos_abs_left, ^setpos_abs_top)
		cc_setfill(true)
		if (calc(int27 % 2) = 1) {
			cc_setcolour(^white)
			cc_settrans(255)
		} else {
			cc_setcolour(^black)
			cc_settrans(225)
		}
		cc_create(component7, ^iftype_text, int27)
		cc_sethide(true)
		cc_create(component8, ^iftype_text, int27)
		cc_sethide(true)
		cc_create(component9, ^iftype_text, int27)
		cc_sethide(true)
		cc_create(component10, ^iftype_text, int27)
		cc_sethide(true)
		cc_create(component11, ^iftype_text, int27)
		cc_sethide(true)
		cc_create(component12, ^iftype_text, int27)
		cc_sethide(true)
		cc_create(component13, ^iftype_text, int27)
		cc_sethide(true)
		cc_create(component14, ^iftype_text, int27)
		cc_sethide(true)
		cc_create(component15, ^iftype_text, int27)
		cc_sethide(true)
		cc_create(component16, ^iftype_text, int27)
		cc_sethide(true)
		cc_create(component17, ^iftype_text, int27)
		cc_sethide(true)
		cc_create(component18, ^iftype_text, int27)
		cc_sethide(true)
		cc_create(component19, ^iftype_text, int27)
		cc_sethide(true)
		cc_create(component20, ^iftype_text, int27)
		cc_sethide(true)
		cc_create(component22, ^iftype_text, int27)
		cc_sethide(true)
		cc_create(component21, ^iftype_graphic, int27)
		cc_sethide(true)
		int27 = calc(int27 + 1)
	}
	~scrollbar_vertical(component4, component3, "scrollbar_dragger_v2,3", "scrollbar_dragger_v2,0", "scrollbar_dragger_v2,1", "scrollbar_dragger_v2,2", "scrollbar_v2,0", "scrollbar_v2,1")
	return 
}
