// 656 proc
fun skill_guide_build(component0: Component, component1: Component, component2: Component, component3: Component, component4: Component, component5: Component, component6: Component, component7: Component) {

	if_settext(enum(int, string, enum_108, VARBIT[4371]), component0)
	val int8: Int = 0
	val int9: Int = 0
	val int10: Int = 0
	val string0: String = ""
	val component11: Component = enum(int, component, enum_990, int9)
	string0, int10 = ~skill_guide_subsection(VARBIT[4371], int9)
	while (component11 ! null & string_length(string0) > 0) {
		if_settext(string0, component11)
		if (VARBIT[4372] = int9) {
			if (int10 = 1) {
				if_settext(append(string0, " - Members Only"), component1)
			} else {
				if_settext(string0, component1)
			}
			int8 = int9
		}
		int9 = calc(int9 + 1)
		component11 = enum(int, component, enum_990, int9)
		string0, int10 = ~skill_guide_subsection(VARBIT[4371], int9)
	}
	val int12: Int = int9
	int9 = 0
	if (int12 >= 2) {
		if_sethide(false, component5)
		if_sethide(false, component6)
		if_sethide(false, component7)
		if_setmodel(enum(int, model, enum_991, int12), component6)
		if_setposition(if_getx(component7), enum(int, int, enum_992, int12), ^setpos_abs_left, ^setpos_abs_top, component7)
		component11 = enum(int, component, enum_990, int9)
		while (component11 ! null) {
			if (int9 < int12) {
				if_sethide(false, component11)
				if_setonop({
					skill_guide_sidepanelop(event_opindex, int9, component0, component1, component2, component3, component4, component5, component6, component7)
				}, component11)
			} else {
				if_sethide(true, component11)
				if_setonop(null, component11)
			}
			int9 = calc(int9 + 1)
			component11 = enum(int, component, enum_990, int9)
		}
	} else {
		if_sethide(true, component5)
		if_sethide(true, component6)
		if_sethide(true, component7)
		component11 = enum(int, component, enum_990, int9)
		while (component11 ! null) {
			if_sethide(true, component11)
			int9 = calc(int9 + 1)
			component11 = enum(int, component, enum_990, int9)
		}
	}
	cc_deleteall(component2)
	cc_deleteall(component3)
	cc_deleteall(component4)
	val int13: Int = calc(if_getwidth(component2) - (28 + 36 + 3))
	val height14: Int = 3
	int9 = 0
	val int15: Int = 0
	val namedobj16: Namedobj = null
	int15, namedobj16, string0 = ~skill_guide_data(VARBIT[4371], int8, int9)
	while (namedobj16 ! null) {
		height14 = ~skill_guide_addentry(int15, namedobj16, string0, component2, component3, int13, int8, int9, height14)
		int9 = calc(int9 + 1)
		int15, namedobj16, string0 = ~skill_guide_data(VARBIT[4371], int8, int9)
	}
	if_setsize(if_getwidth(component2), height14, ^setsize_abs, ^setsize_abs, component3)
	if_setscrollpos(0, 0, component2)
	if (height14 > if_getheight(component2)) {
		if_setscrollsize(0, height14, component2)
		~scrollbar_vertical(component4, component2, "scrollbar_parchment_dragger_v2,3", "scrollbar_parchment_dragger_v2,0", "scrollbar_parchment_dragger_v2,1", "scrollbar_parchment_dragger_v2,2", "scrollbar_parchment_v2,0", "scrollbar_parchment_v2,1")
	} else {
		if_setscrollsize(0, 0, component2)
	}
	return 
}
