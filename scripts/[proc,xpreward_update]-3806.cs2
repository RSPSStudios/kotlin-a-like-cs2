// 3806 proc
fun xpreward_update(int0: Int, component1: Component, component2: Component) {

	val stat3: Stat = enum(int, stat, enum_681, int0)
	if (stat3 ! null & ~script3809(VARP[261], stat3, 0) = 0) {
		int0, stat3 = 0, null
	}
	val mes0: String = "You need to choose which skill you wish to be advanced."
	if (stat3 ! null) {
		if (cc_find(component2, 0) = ^true) {
			cc_setcolour(0x999999)
			cc_settext("Confirm: ${enum(stat, string, enum_680, stat3)}")
		}
		if_setonmouserepeat {
			cc_colour_swapper(component2, 0, 0xcccccc)
		}
		if_setonmouseleave {
			cc_colour_swapper(component2, 0, 0x999999)
		}
		if_setonop {
			xpreward_confirm(int0, component1, component2)
		}
	} else {
		if (cc_find(component2, 0) = ^true) {
			cc_setcolour(0x666666)
			cc_settext("Confirm")
		}
		if_setonmouserepeatnull
		if_setonmouseleavenull
		if_setonop {
			mes(mes0)
		}
	}
	if_setonvartransmit(component1)  {
		xpreward_update(0, int0, component1, component2){VARP[261], VARP[80], VARP[63], VARP[738]}
	}
	if_setonstattransmit {
		xpreward_update(0, int0, component1, component2)
	}
	if_setontimernull
	val comsubid4: Int = 0
	val component5: Component = null
	val stat6: Stat = null
	val int7: Int = 1
	while (int7 <= 23) {
		component5, stat6 = enum(int, component, enum_421, int7), enum(int, stat, enum_681, int7)
		if (component5 ! null & stat6 ! null) {
			cc_deleteall(component5)
			if (stat6 = stat3) {
				comsubid4 = ~options_button_on(component5, 0)
			} else {
				comsubid4 = ~options_button_off(component5, 0)
			}
			cc_create(component5, ^iftype_graphic, comsubid4)
			cc_setsize(25, 25, ^setsize_abs, ^setsize_abs)
			cc_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_centre)
			cc_setgraphic(enum(stat, graphic, enum_255, stat6))
			if (~script3809(VARP[261], stat6, 0) = 1) {
				cc_settrans(0)
			} else {
				cc_settrans(150)
			}
			if_setop(1, enum(stat, string, enum_680, stat6), component5)
			if_setonop {
				xpreward_select(VARP[261], int7, component1, component2)
			}
		}
		int7 = calc(int7 + 1)
	}
	return 
}
