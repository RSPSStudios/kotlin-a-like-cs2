// 3850 proc
fun settings_create_drop_down(int0: Int, int1: Int, int2: Int, int3: Int, trans4: Int, struct5: Struct, component6: Component, component7: Component, component8: Component, component9: Component, component10: Component, component11: Component, component12: Component, component13: Component, component14: Component): Int, Int, Int, Int {

	val enum15: Enum = struct_param(struct5, param_1091)
	val boolean16: Boolean = ~on_mobile
	if (boolean16 = true & struct_param(struct5, param_1092) ! null) {
		enum15 = struct_param(struct5, param_1092)
	}
	if (enum15 = null) {
		cc_create(component6, ^iftype_rectangle, int3)
		cc_sethide(true)
		int3 = calc(int3 + 1)
		return int0, int1, int2, int3
	}
	val int17: Int = calc(parawidth(enum(int, string, enum15, ^max_32bit_int), 1000, p12_full) + 14)
	val int18: Int = calc(int17 + 20)
	val string0: String = struct_param(struct5, param_1086)
	if (boolean16 = true & string_length(struct_param(struct5, param_1087)) > 0) {
		string0 = struct_param(struct5, param_1087)
	}
	val string1: String = struct_param(struct5, param_1096)
	val int19: Int = 0
	val int20: Int = VARBIT[9665]
	val boolean21: Boolean = struct_param(struct5, param_1119)
	if (boolean16 = true & string_length(struct_param(struct5, param_1097)) > 0) {
		string1 = struct_param(struct5, param_1097)
	}
	if (string_length(string1) > 0) {
		int19 = calc(paraheight(string1, if_getwidth(component7) - (int18 + 25), p12_full) * 14)
	}
	int1 = calc(int1 + int19)
	if (int20 = 1 | boolean21 = true) {
		int19 = 0
	}
	val int22: Int = calc(paraheight(string0, if_getwidth(component7) - (int18 + 25), b12_full) * 14)
	if (boolean16 = true & int22 < 20) {
		int22 = 20
	}
	val int23: Int = calc(int22 + 12 + int19)
	val boolean24: Boolean = struct_param(struct5, param_1085)
	val int25: Int = ~script3957(struct5)
	cc_create(component7, ^iftype_rectangle, int2)
	cc_setsize(10, int23, ^setsize_minus, ^setsize_abs)
	cc_setposition(0, int0, ^setpos_abs_centre, ^setpos_abs_top)
	cc_setfill(true)
	cc_setcolour(^black)
	cc_settrans(trans4)
	int2 = calc(int2 + 1)
	cc_create(component7, ^iftype_text, int2)
	cc_setsize(calc(int18 + 25), int22, ^setsize_minus, ^setsize_abs)
	cc_setposition(10, calc(int0 + 6), ^setpos_abs_left, ^setpos_abs_top)
	cc_settext(string0)
	cc_settextfont(b12_full)
	cc_settextshadow(true)
	if (int25 = 1) {
		cc_setcolour(0xff981f)
	} else {
		cc_setcolour(0x9f9f9f)
	}
	if (boolean16 = false & int20 = 1 & string_length(string1) > 0) {
		cc_setonmouserepeat({
			tooltip_mouserepeat(component7, int2, component14, string1, 25, 190)
		})
		cc_setonmouseleave({
			deltooltip(component14)
		})
	}
	cc_settextalign(^settextalign_left, ^settextalign_centre, 14)
	int2 = calc(int2 + 1)
	cc_create(component7, ^iftype_graphic, int2)
	int2 = calc(int2 + 1)
	cc_setsize(int18, 20, ^setsize_abs, ^setsize_abs)
	cc_setposition(10, calc(int0 + (int23 / 2 - 10)), ^setpos_abs_right, ^setpos_abs_top)
	cc_setgraphic("tradebacking")
	cc_settiling(true)
	cc_create(component7, ^iftype_rectangle, int2)
	int2 = calc(int2 + 1)
	cc_setsize(int18, 20, ^setsize_abs, ^setsize_abs)
	cc_setposition(10, calc(int0 + (int23 / 2 - 10)), ^setpos_abs_right, ^setpos_abs_top)
	cc_setfill(false)
	cc_setcolour(0x0e0e0c)
	cc_create(component7, ^iftype_rectangle, int2)
	int2 = calc(int2 + 1)
	cc_setsize(calc(int18 - 2), 18, ^setsize_abs, ^setsize_abs)
	cc_setposition(11, calc(int0 + (int23 / 2 - 9)), ^setpos_abs_right, ^setpos_abs_top)
	cc_setfill(false)
	cc_setcolour(0x474745)
	cc_create(component7, ^iftype_graphic, int2)
	val comsubid26: Int = int2
	int2 = calc(int2 + 1)
	cc_setsize(16, 16, ^setsize_abs, ^setsize_abs)
	cc_setposition(12, calc(int0 + (int23 / 2 - 8)), ^setpos_abs_right, ^setpos_abs_top)
	cc_setgraphic("scrollbar_v2,1")
	cc_create(component7, ^iftype_text, int2)
	int2 = calc(int2 + 1)
	cc_setsize(int17, 16, ^setsize_abs, ^setsize_abs)
	cc_setposition(28, calc(int0 + (int23 / 2 - 8)), ^setpos_abs_right, ^setpos_abs_top)
	cc_settextfont(p12_full)
	if (int25 = 1) {
		cc_setcolour(0xff981f)
	} else {
		cc_setcolour(0x9f9f9f)
	}
	cc_settextshadow(true)
	cc_settextalign(^settextalign_centre, ^settextalign_centre, 0)
	val int27: Int = struct_param(struct5, param_1077)
	cc_settext(enum(int, string, enum15, ~settings_get_dropdown(int27)))
	cc_create(component6, ^iftype_rectangle, int3)
	int3 = calc(int3 + 1)
	cc_setsize(int18, 20, ^setsize_abs, ^setsize_abs)
	cc_setposition(10, calc(int0 + (int23 / 2 - 10)), ^setpos_abs_right, ^setpos_abs_top)
	cc_setfill(true)
	cc_setcolour(^black)
	cc_settrans(255)
	cc_setop(1, "Select")
	cc_setonop({
		setting_show_dropdown(2, struct5, component7, calc(int2 - 1), enum15, int18, 20, cc_getx, cc_gety, component8, component9, component10, component11, component12, component13, comsubid26, boolean24)
	})
	cc_create(component7, ^iftype_rectangle, int2)
	cc_setsize(int18, 20, ^setsize_abs, ^setsize_abs)
	cc_setposition(10, calc(int0 + (int23 / 2 - 10)), ^setpos_abs_right, ^setpos_abs_top)
	cc_setfill(true)
	cc_setcolour(^black)
	cc_settrans(255)
	if (boolean24 = true) {
		~settings_dropdown_choose_transmit(2, struct5, calc(int2 - 1), calc(int2 - 6), int2, component7, enum15, int27, component8, component9, component10, component11, component13)
	}
	if (int25 = 1 & ~on_mobile = false) {
		cc_setonmouseover({
			cc_settrans(component7, int2, 220, null)
		})
		cc_setonmouseleave({
			cc_settrans(component7, int2, 255, null)
		})
	}
	int2 = calc(int2 + 1)
	if (boolean21 = false & int20 = 0 & int19 > 0) {
		cc_create(component7, ^iftype_text, int2)
		cc_setsize(calc(int18 + 25), int19, ^setsize_minus, ^setsize_abs)
		cc_setposition(10, calc(int0 + 6 + int22), ^setpos_abs_left, ^setpos_abs_top)
		cc_settext(string1)
		cc_settextfont(p12_full)
		cc_settextshadow(true)
		cc_setcolour(0x9f9f9f)
		cc_settextalign(^settextalign_left, ^settextalign_centre, 14)
		int2 = calc(int2 + 1)
	}
	int0 = calc(int23 + int0)
	return int0, int1, int2, int3
}
