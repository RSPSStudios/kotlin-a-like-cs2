// 2776 proc
fun pest_rewards_draw(int0: Int, component1: Component, component2: Component, component3: Component, component4: Component): Int {

	if_setonvartransmit(component1)  {
		pest_rewards_draw(int0, component1, component2, component3, component4){VARP[261]}
	}
	if_setonstattransmit(component1)  {
		pest_rewards_draw(int0, component1, component2, component3, component4){attack, strength, defence, ranged, magic, hitpoints, prayer, herblore, mining, farming}
	}
	cc_deleteall(component2)
	val int5: Int = 0
	val int6: Int = 3
	val int7: Int = calc(if_getwidth(component2) / 2)
	int5 = ~pest_rewards_statdraw(attack, int6, 0, int7, 0, 1, 2, component1, component2, component3, component4, int5, int0)
	int5 = ~pest_rewards_statdraw(strength, int6, int7, int7, 3, 4, 5, component1, component2, component3, component4, int5, int0)
	int6 = calc(int6 + 32 + 3)
	int5 = ~pest_rewards_statdraw(defence, int6, 0, int7, 6, 7, 8, component1, component2, component3, component4, int5, int0)
	int5 = ~pest_rewards_statdraw(ranged, int6, int7, int7, 9, 10, 11, component1, component2, component3, component4, int5, int0)
	int6 = calc(int6 + 32 + 3)
	int5 = ~pest_rewards_statdraw(magic, int6, 0, int7, 12, 13, 14, component1, component2, component3, component4, int5, int0)
	int5 = ~pest_rewards_statdraw(hitpoints, int6, int7, int7, 15, 16, 17, component1, component2, component3, component4, int5, int0)
	int6 = calc(int6 + 32 + 3)
	int5 = ~pest_rewards_statdraw(prayer, int6, 0, int7, 18, 19, 20, component1, component2, component3, component4, int5, int0)
	int6 = calc(int6 + 32)
	int6, int5 = ~pest_rewards_divider(5, component2, int6, int5)
	int5 = ~pest_rewards_itemdraw(rogues_purse_1534, int6, 0, int7, 21, component1, component2, component3, component4, int5, int0)
	int5 = ~pest_rewards_itemdraw(dummy_copper_ore_980, int6, int7, int7, 22, component1, component2, component3, component4, int5, int0)
	int6 = calc(int6 + 32 + 3)
	int5 = ~pest_rewards_itemdraw(banana_tree_seed_5_5235, int6, 0, int7, 23, component1, component2, component3, component4, int5, int0)
	int6 = calc(int6 + 32)
	int6, int5 = ~pest_rewards_divider(5, component2, int6, int5)
	int5 = ~pest_rewards_itemdraw(void_knight_mace_8841, int6, 0, int7, 24, component1, component2, component3, component4, int5, int0)
	int5 = ~pest_rewards_itemdraw(void_knight_top_8839, int6, int7, int7, 25, component1, component2, component3, component4, int5, int0)
	int6 = calc(int6 + 32 + 3)
	int5 = ~pest_rewards_itemdraw(void_knight_robe_8840, int6, 0, int7, 26, component1, component2, component3, component4, int5, int0)
	int5 = ~pest_rewards_itemdraw(void_knight_gloves_8842, int6, int7, int7, 27, component1, component2, component3, component4, int5, int0)
	int6 = calc(int6 + 32 + 3)
	int5 = ~pest_rewards_itemdraw(void_mage_helm_11663, int6, 0, int7, 28, component1, component2, component3, component4, int5, int0)
	int5 = ~pest_rewards_itemdraw(void_ranger_helm_11664, int6, int7, int7, 29, component1, component2, component3, component4, int5, int0)
	int6 = calc(int6 + 32 + 3)
	int5 = ~pest_rewards_itemdraw(void_melee_helm_11665, int6, 0, int7, 30, component1, component2, component3, component4, int5, int0)
	int5 = ~pest_rewards_itemdraw(void_seal_8_11666, int6, int7, int7, 31, component1, component2, component3, component4, int5, int0)
	int6 = calc(int6 + 32 + 5)
	val text0: String = ""
	cc_deleteall(component3)
	int5 = 0
	if (int0 ! -1) {
		text0 = enum(int, string, enum_2285, int0)
		~pest_rewards_confirmdraw(false, text0, component4)
		while (int5 < int0) {
			cc_create(component3, ^iftype_rectangle, int5)
			cc_sethide(true)
			int5 = calc(int5 + 1)
		}
		cc_create(component3, ^iftype_rectangle, int5)
		cc_sethide(false)
		cc_setsize(0, 0, ^setsize_minus, ^setsize_minus)
		cc_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_centre)
		cc_setop(1, "Confirm")
		cc_setonmouserepeat {
			pest_rewards_confirmdraw(true, text0, component4)
		}
		cc_setonmouseleave {
			pest_rewards_confirmdraw(false, text0, component4)
		}
		cc_setonop {
			pest_rewards_confirmop(event_opindex, component1, component2, component3, component4)
		}
	} else {
		int5 = ~v2_stone_button_in_filled(component4)
		cc_create(component4, ^iftype_text, int5)
		cc_setsize(0, 0, ^setsize_minus, ^setsize_minus)
		cc_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_centre)
		cc_setcolour(0x7f7f7f)
		cc_settextalign(^settextalign_centre, ^settextalign_centre, 0)
		cc_settextfont(p12_full)
		cc_settextshadow(false)
		cc_settext("Confirm")
	}
	return int6
}
