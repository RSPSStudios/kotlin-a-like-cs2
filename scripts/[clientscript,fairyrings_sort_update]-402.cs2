// 402 clientscript
fun fairyrings_sort_update(component0: Component, component1: Component, int2: Int, component3: Component, component4: Component) {

	if (int2 = 1) {
		if (VARCINT[54] = 1 | VARCINT[54] = 0) {
			VARCINT[54] = VARCINT[54]
		} else {
			VARCINT[54] = 0
		}
		if (VARCINT[0] < 0) {
			VARCINT[0] = 0
		}
		~scrollbar_vertical(component1, component0, "scrollbar_dragger_v2,3", "scrollbar_dragger_v2,0", "scrollbar_dragger_v2,1", "scrollbar_dragger_v2,2", "scrollbar_v2,0", "scrollbar_v2,1")
	} else {
		sound_synth(synth_2266, 1, 0)
		if (VARCINT[54] = 1) {
			VARCINT[54] = 0
		} else {
			VARCINT[54] = 1
		}
	}
	val component5: Component = null
	val component6: Component = null
	val component7: Component = null
	val width8: Int = calc(if_getwidth(component0) - 20)
	if (width8 <= 0) {
		width8 = 143
	}
	cc_deleteall(component0)
	cc_deleteall(component4)
	val int9: Int = 17
	val int10: Int = 0
	val int11: Int = 0
	val boolean12: Boolean = true
	while (int11 < 4) {
		component5 = enum(int, component, enum_1297, int11)
		component7 = enum(int, component, enum_1298, int11)
		component6 = enum(int, component, enum_1299, int11)
		if (component5 ! null & component6 ! null & component7 ! null) {
			if (string_length(if_gettext(component5)) > 0) {
				int9 = calc(paraheight(if_gettext(component5), width8, p12_full) * 12 + 5)
				if_sethide(false, component5)
				if_sethide(false, component7)
				if_sethide(false, component6)
				if_setsize(width8, int9, ^setsize_abs, ^setsize_abs, component5)
				if_setsize(width8, int9, ^setsize_abs, ^setsize_abs, component7)
				if_setposition(20, int10, ^setpos_abs_left, ^setpos_abs_top, component5)
				if_setposition(2, int10, ^setpos_abs_left, ^setpos_abs_top, component6)
				if_setposition(20, int10, ^setpos_abs_left, ^setpos_abs_top, component7)
				if_setopbase("<col=ff981f>${if_gettext(component7)}</col>", component5)
				if_setonmouseover {
					text_colour_swapper(component7, 0xff7f7f)
				}
				if_setonmouseleave {
					text_colour_swapper(component7, 0xff3f3f)
				}
				boolean12 = false
				int10 = calc(int10 + int9 + 3)
			} else {
				if_sethide(true, component5)
				if_sethide(true, component6)
				if_sethide(true, component7)
			}
		}
		int11 = calc(int11 + 1)
	}
	if (boolean12 = false) {
		int10 = calc(int10 + 3)
	}
	if_sethide(boolean12, component3)
	if_setsize(0, int10, ^setsize_minus, ^setsize_abs, component4)
	val int13: Int = 0
	val component14: Component = null
	component0[64]: Component
	val int15: Int = 0
	val string0: String = ""
	while (int13 < 64) {
		component14 = enum(int, component, enum_824, int13)
		if (component14 ! null) {
			component6 = enum(component, component, enum_1296, component14)
			if (string_length(if_gettext(component14)) > 0) {
				if_sethide(false, component14)
				if (component6 ! null) {
					if_sethide(false, component6)
				}
				component0[int15] = component14
				int15 = calc(int15 + 1)
			} else {
				if_sethide(true, component14)
				if (component6 ! null) {
					if_sethide(true, component6)
				}
			}
		}
		int13 = calc(int13 + 1)
	}
	if (int15 > 0) {
		if (VARCINT[54] = 1) {
			~quicksort_componenttext(component0, 0, calc(int15 - 1))
		} else {
			~quicksort_componentenum(component0, 0, calc(int15 - 1), enum_823)
		}
	}
	int13 = 0
	cc_deleteall(component0)
	while (int13 < int15) {
		component6 = enum(component, component, enum_1296, component0[int13])
		string0 = enum(component, string, enum_823, component0[int13])
		int9 = calc(paraheight(if_gettext(component0[int13]), width8, p12_full) * 12 + 5)
		if (component6 ! null) {
			if_setposition(2, int10, ^setpos_abs_left, ^setpos_abs_top, component6)
		}
		if_setsize(width8, int9, ^setsize_abs, ^setsize_abs, component0[int13])
		if_setposition(20, int10, ^setpos_abs_left, ^setpos_abs_top, component0[int13])
		cc_create(component0, ^iftype_text, int13)
		cc_setsize(width8, int9, ^setsize_abs, ^setsize_abs)
		cc_setposition(20, if_gety(component0[int13]), ^setpos_abs_left, ^setpos_abs_top)
		cc_settextfont(p12_full)
		cc_setcolour(0xff3f3f)
		cc_settextshadow(true)
		cc_settextalign(^settextalign_left, ^settextalign_top, 0)
		cc_settext(string0)
		if_setopbase("<col=ff981f>${string0}</col>", component0[int13])
		if_setonmouseover {
			cc_colour_swapper(component0, cc_getid, 0xff7f7f)
		}
		if_setonmouseleave {
			cc_colour_swapper(component0, cc_getid, 0xff3f3f)
		}
		int10 = calc(int10 + int9 + 3)
		int13 = calc(int13 + 1)
	}
	string0 = if_gettext(interface_381:139)
	if (string_length(string0) > 0) {
		if_sethide(false, interface_381:139)
		int9 = calc(paraheight(string0, width8, p12_full) * 12 + 5)
		if_setsize(width8, int9, ^setsize_abs, ^setsize_abs, interface_381:139)
		if_setposition(20, int10, ^setpos_abs_left, ^setpos_abs_top, interface_381:139)
		if_setcolour(0xff3f3f, interface_381:139)
		if_setonmouseover {
			text_colour_swapper(event_com, 0xff7f7f)
		}
		if_setonmouseleave {
			text_colour_swapper(event_com, 0xff3f3f)
		}
		int10 = calc(int10 + int9 + 3)
	} else {
		if_sethide(true, interface_381:139)
	}
	if (int10 > 0) {
		int10 = calc(int10 - 3)
	}
	int9 = if_getheight(component0)
	if (int10 > int9) {
		if_setscrollsize(0, int10, component0)
		int9 = calc(int10 - int9)
		if (VARCINT[0] > int9) {
			VARCINT[0] = int9
		}
	} else {
		if_setscrollsize(0, 0, component0)
		VARCINT[0] = 0
	}
	~scrollbar_resize(component1, component0, VARCINT[0])
	return 
}
