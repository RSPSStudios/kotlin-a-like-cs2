// 3189 proc
fun league_relics_draw_selections(component0: Component, component1: Component, component2: Component, component3: Component, component4: Component, component5: Component, component6: Component, component7: Component, component8: Component, component9: Component, component10: Component, component11: Component, component12: Component, comsubid13: Int) {

	cc_deleteall(component1)
	cc_deleteall(component2)
	cc_deleteall(component3)
	cc_deleteall(component4)
	cc_deleteall(component5)
	cc_deleteall(component0)
	cc_deleteall(component10)
	cc_deleteall(component11)
	val struct14: Struct = enum(int, struct, enum_2670, VARBIT[10032])
	val colour15: Int = 0xff981f
	val enum16: Enum = null
	val struct17: Struct = null
	val int18: Int = 0
	val int19: Int = 0
	val enum20: Enum = null
	if (struct14 ! null) {
		enum16 = struct_param(struct14, param_870)
		colour15 = struct_param(struct14, param_1027)
	}
	cc_create(component0, ^iftype_graphic, 0)
	cc_setsize(0, 0, ^setsize_minus, ^setsize_minus)
	cc_setposition(0, 0, ^setpos_abs_left, ^setpos_abs_top)
	cc_setgraphic("tradebacking_light")
	if_sethide(false, component6)
	if_sethide(true, component7)
	if_sethide(true, component9)
	if_sethide(true, component8)
	if (enum16 ! null) {
		int18 = enum_getoutputcount(enum16)
	}
	val int21: Int = 0
	~leagues_menu_button(component10, int21, component11, component12)
	int21 = 0
	~league_create_dropdown(component10, component11, component12, int21, 2)
	if (cc_find(interface_655:2, comsubid13) = ^true) {
		cc_setcolour(colour15)
	}
	val width22: Int = if_getwidth(component6)
	val int23: Int = calc(if_getheight(component6) - 5)
	val int24: Int = 0
	val int25: Int = 0
	val int26: Int = 0
	val int27: Int = 0
	val int28: Int = 0
	if (int18 > 0) {
		int24 = calc(width22 / int18)
		int27 = calc((width22 - int24 * int18) / 2)
	}
	val int29: Int = -1
	val string0: String = ""
	val int30: Int = 0
	val int31: Int = 0
	val colour32: Int = null
	val colour33: Int = null
	val colour34: Int = null
	val colour35: Int = null
	val trans36: Int = 0
	val int37: Int = 0
	val struct38: Struct = null
	val graphic39: Graphic = null
	val text1: String = ""
	val int40: Int = -1
	val struct41: Struct = null
	val int42: Int = 0
	val int43: Int = 0
	val int44: Int = 0
	while (int42 < int18) {
		struct17 = enum(int, struct, enum16, int42)
		enum20 = struct_param(struct17, param_878)
		when (int42): Int {
			0 -> {
			
				int40 = VARBIT[10049]
			}
			1 -> {
			
				int40 = VARBIT[10050]
			}
			2 -> {
			
				int40 = VARBIT[10051]
			}
			3 -> {
			
				int40 = VARBIT[10052]
			}
			4 -> {
			
				int40 = VARBIT[10053]
			}
			5 -> {
			
				int40 = VARBIT[11696]
			}
		else -> {
		
			int40 = 0
		}
		}
		struct41 = enum(int, struct, enum20, int40)
		if (enum20 ! null & struct41 ! null) {
			cc_create(component1, ^iftype_graphic, int42)
			cc_setsize(int24, 0, ^setsize_abs, ^setsize_minus)
			cc_setposition(int27, 0, ^setpos_abs_left, ^setpos_abs_top)
			cc_setgraphic("tradebacking_dark")
			cc_settiling(true)
			int29, string0, int30, int31, int37, colour33, colour35 = 255, "", 1, 0, 1, 0xaaaaaa, 0xdddddd
		} else if (int28 = 0 & enum20 ! null & VARP[2615] >= struct_param(struct17, param_877)) {
			cc_create(component1, ^iftype_graphic, int42)
			cc_setsize(int24, 0, ^setsize_abs, ^setsize_minus)
			cc_setposition(int27, 0, ^setpos_abs_left, ^setpos_abs_top)
			cc_setgraphic("tradebacking_light")
			cc_settiling(true)
			int29, string0, int30, int31, int37, colour33, colour35 = 127, "", 1, 1, 1, null, null
			int28 = 1
		} else {
			cc_create(component1, ^iftype_graphic, int42)
			cc_setsize(int24, 0, ^setsize_abs, ^setsize_minus)
			cc_setposition(int27, 0, ^setpos_abs_left, ^setpos_abs_top)
			cc_setgraphic("tradebacking_dark")
			cc_settiling(true)
			int29, string0, int30, int31, int37, colour33, colour35 = 255, "", 1, 0, 1, null, null
		}
		cc_create(component0, ^iftype_text, calc(int42 + 1))
		cc_setsize(int24, 0, ^setsize_abs, ^setsize_minus)
		cc_setposition(int27, 0, ^setpos_abs_left, ^setpos_abs_top)
		cc_settextfont(p11_full)
		cc_settextalign(^settextalign_centre, ^settextalign_centre, 0)
		cc_settextshadow(true)
		cc_setcolour(colour15)
		cc_settext("Tier ${tostring(calc(int42 + 1))}")
		if (enum20 ! null) {
			int19 = enum_getoutputcount(enum20)
		} else {
			int19 = 0
		}
		if (int19 > 0) {
			int25 = calc(int23 / int19)
			int26 = calc((int23 - int25 * int19) / 2)
		}
		int43 = 0
		while (int43 < int19) {
			struct38 = enum(int, struct, enum20, calc(int43 + 1))
			cc_create(component4, ^iftype_text, int44)
			if (string_length(string0) > 0) {
				text1 = string0
			} else {
				text1 = struct_param(struct38, param_879)
			}
			cc_setsize(calc(int24 - 10), 32, ^setsize_abs, ^setsize_abs)
			cc_setposition(calc(int27 + 5), calc(int26 + int25 / 2 + 1), ^setpos_abs_left, ^setpos_abs_top)
			cc_settext(text1)
			cc_settextfont(p11_full)
			if (struct38 ! struct41) {
				if (colour33 ! null) {
					colour32 = colour33
				} else {
					colour32 = colour15
				}
				if (colour35 ! null) {
					colour34 = colour35
				} else {
					colour34 = ^white
				}
			} else {
				colour32, colour34 = colour15, ^white
			}
			cc_setcolour(colour32)
			cc_settextshadow(true)
			cc_settextalign(^settextalign_centre, ^settextalign_centre, 0)
			cc_create(component2, ^iftype_graphic, int44)
			cc_setsize(30, 30, ^setsize_abs, ^setsize_abs)
			cc_setposition(calc(int27 + int24 / 2 - 15), calc(int26 + int25 / 2 - 31), ^setpos_abs_left, ^setpos_abs_top)
			if (struct38 = struct41) {
				graphic39, trans36 = struct_param(struct38, param_881), 0
			} else {
				graphic39, trans36 = struct_param(struct38, param_883), calc(int29 - 128)
			}
			cc_setgraphic(graphic39)
			cc_create(component3, ^iftype_graphic, int44)
			cc_setsize(34, 34, ^setsize_abs, ^setsize_abs)
			cc_setposition(calc(int27 + int24 / 2 - 17), calc(int26 + int25 / 2 - 33), ^setpos_abs_left, ^setpos_abs_top)
			cc_setgraphic(struct_param(struct14, param_1026))
			if (int29 ! -1) {
				cc_settrans(int29)
			} else {
				cc_settrans(255)
			}
			cc_create(component5, ^iftype_rectangle, int44)
			cc_setsize(int24, int25, ^setsize_abs, ^setsize_abs)
			cc_setposition(int27, int26, ^setpos_abs_left, ^setpos_abs_top)
			cc_setfill(true)
			cc_settrans(255)
			if (int37 = 1) {
				cc_setop(1, "View")
				cc_setopbase("<col=ff981f>${text1}</col>")
				cc_setonop {
					league_relics_loading(component9, int44, component3, int29, component2, graphic39, component4, colour32)
				}
			}
			if (int30 = 1 & ~on_mobile = false) {
				if (int31 = 1) {
					cc_setonmouserepeat {
						league_relic_hover(component3, trans36, component2, struct_param(struct38, param_881), component4, colour34, int44)
					}
				} else {
					cc_setonmouserepeat {
						league_relic_hover(component3, trans36, component2, graphic39, component4, colour34, int44)
					}
				}
				cc_setonmouseleave {
					league_relic_hover(component3, int29, component2, graphic39, component4, colour32, int44)
				}
			}
			int44 = calc(int44 + 1)
			int26 = calc(int26 + int25)
			int43 = calc(int43 + 1)
		}
		int27 = calc(int27 + int24)
		int42 = calc(int42 + 1)
	}
	if (int28 = 1) {
		cc_deleteall(component0)
		cc_create(component0, ^iftype_graphic, 0)
		cc_setsize(0, 0, ^setsize_minus, ^setsize_minus)
		cc_setposition(0, 0, ^setpos_abs_left, ^setpos_abs_top)
		cc_setgraphic("tradebacking_light")
		cc_create(component0, ^iftype_text, 1)
		cc_setsize(0, 0, ^setsize_minus, ^setsize_minus)
		cc_setposition(0, 0, ^setpos_abs_left, ^setpos_abs_top)
		cc_settextfont(p11_full)
		cc_settextalign(^settextalign_centre, ^settextalign_centre, 0)
		cc_settextshadow(true)
		cc_setcolour(colour15)
		cc_settext("You have a new Relic available for selection!")
	}
	return 
}
