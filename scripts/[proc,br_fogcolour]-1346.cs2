// 1346 proc
fun br_fogcolour() {

	val colour0: Int = 0x882000
	if (VARBIT[11865] = 0) {
		when (VARBIT[11798]): Int {
			1 -> {
			
				colour0 = 0x882000
			}
			2 -> {
			
				colour0 = 0xffcc66
			}
		}
	} else {
		when (VARBIT[11865]): Int {
			1 -> {
			
				colour0 = 0x00cc44
			}
			2 -> {
			
				colour0 = 0xffcc66
			}
			3 -> {
			
				colour0 = 0x882000
			}
			4 -> {
			
				colour0 = 0x4dd2ff
			}
			5 -> {
			
				colour0 = 0xf5f5f0
			}
		}
	}
	val colour1: Int = colour0
	val int2: Int = if_gettrans(temple_screen:1)
	if (VARBIT[5320] <= 0 & VARBIT[5316] <= 0) {
		if (colour1 ! colour0) {
			if_setcolour(colour0, temple_screen:1)
		}
		if (int2 ! 255) {
			if_settrans(255, temple_screen:1)
		}
		_2124(255, temple_screen:1)
		return 
	}
	val int3: Int = 0
	val int4: Int = 0
	val int5: Int = 0
	val int6: Int = 0
	val int7: Int = 0
	val int8: Int = 0
	val int9: Int = 0
	val int10: Int = 0
	val int11: Int = 0
	val int12: Int = 0
	val int13: Int = 0
	int11, int12, int13 = ~hex_to_rgb(colour0)
	val int14: Int = 100
	val int15: Int = 255
	val int16: Int = 0
	val int17: Int = 0
	val int18: Int = 0
	val int19: Int = 0
	int17, int18, int19 = ~hex_to_rgb(colour1)
	int4 = invpow(pow(calc(coordx(coord) - VARBIT[5320]), 2), 2)
	int5 = invpow(pow(calc(coordz(coord) - VARBIT[5316]), 2), 2)
	if (int4 > int5) {
		int3 = int4
	} else {
		int3 = int5
	}
	int6, int7 = calc(VARBIT[5317] - 8), calc(VARBIT[5317] + 8)
	if (int3 <= int6) {
		int8, int9, int10, int16 = int17, int18, int19, int15
	} else if (int3 >= int7) {
		int8, int9, int10, int16 = int11, int12, int13, int14
	} else {
		int3 = calc(int3 - int6)
		int8, int9, int10, int16 = interpolate(0, int3, 0, 16, int11), interpolate(0, int3, 0, 16, int12), interpolate(0, int3, 0, 16, int13), int14
	}
	if (int17 < int8) {
		int17 = calc(int17 + 1)
	} else if (int17 > int8) {
		int17 = calc(int17 - 1)
	}
	if (int18 < int9) {
		int18 = calc(int18 + 1)
	} else if (int18 > int9) {
		int18 = calc(int18 - 1)
	}
	if (int19 < int10) {
		int19 = calc(int19 + 1)
	} else if (int19 > int10) {
		int19 = calc(int19 - 1)
	}
	if_setcolour(~rgb_to_hex(int17, int18, int19), temple_screen:1)
	if (int2 < int16) {
		int2 = calc(int2 + 1)
	} else if (int2 > int16) {
		int2 = calc(int2 - 1)
	}
	if_settrans(int2, temple_screen:1)
	_2124(255, temple_screen:1)
	return 
}
