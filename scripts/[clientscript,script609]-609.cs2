// 609 clientscript
fun script609(colour0: Int, settextalignh1: Int, fontmetrics2: Fontmetrics, fontmetrics3: Fontmetrics, int4: Int, int5: Int, component6: Component, string0: String) {

	if (if_hassub(enum(component, component, ~toplevel_getcomponents, interface_161:15)) = false) {
		return 
	}
	val width7: Int = if_getwidth(component6)
	val int8: Int = 0
	val int9: Int = 0
	val int10: Int = 0
	val int11: Int = 0
	val int12: Int = 0
	int10, int11, int12 = ~hex_to_rgb(colour0)
	if (int10 > 64) {
		int10 = calc(int10 - 32)
	} else {
		int10 = calc(int10 / 2)
	}
	if (int11 > 64) {
		int11 = calc(int11 - 32)
	} else {
		int11 = calc(int11 / 2)
	}
	if (int12 > 64) {
		int12 = calc(int12 - 32)
	} else {
		int12 = calc(int12 / 2)
	}
	val colour13: Int = ~rgb_to_hex(int10, int11, int12)
	val string1: String = ""
	string1, string0 = ~script632(string0)
	while (string_length(string1) > 0) {
		int8 = calc(paraheight(string1, width7, fontmetrics3) * int4 + int5)
		cc_create(component6, ^iftype_text, VARCINT[43])
		VARCINT[43] = calc(VARCINT[43] + 1)
		cc_setposition(0, VARCINT[49], ^setpos_abs_left, ^setpos_abs_top)
		cc_setsize(width7, int8, ^setsize_abs, ^setsize_abs)
		if (calc(int9 % 2) = 0) {
			cc_setcolour(colour0)
		} else {
			cc_setcolour(colour13)
		}
		cc_settextfont(fontmetrics2)
		cc_settextalign(settextalignh1, ^settextalign_top, 0)
		cc_settextshadow(true)
		cc_settext(string1)
		VARCINT[49], int9 = calc(VARCINT[49] + int8 + 3), calc(int9 + 1)
		string1, string0 = ~script632(string0)
	}
	if (int9 > 0) {
		VARCINT[49] = calc(VARCINT[49] + 3)
	}
	return 
}
