// 90 proc
fun filtertest(chattype0: Int, string0: String, string1: String, clock1: Int, int2: Int, string2: String, int3: Int): Int {

	if (chattype0 = null) {
		return 0
	}
	if (clock1 < VARCINT[383]) {
		return 0
	}
	if (enum(int, boolean, enum_892, chattype0) = true & chattype0 ! ^chattype_playerrelated) {
		if (chattype0 = ^chattype_spam & VARBIT[26] = 1) {
			return 0
		}
		return 1
	}
	val chatfilter4: Int = null
	val string3: String = ""
	val int5: Int = -1
	when (chattype0): Int {
		^chattype_publicchat, ^chattype_modchat -> {
		
			if (clock1 < VARCINT[199]) {
				return 0
			}
			if (compare(string2, removetags(string0)) = 0) {
				return 1
			}
			if (int3 = 2) {
				return 0
			}
			chatfilter4 = chat_getfilter_public
			if (chatfilter4 = ^chatfilter_off | chatfilter4 = ^chatfilter_hide) {
				return 0
			}
			if (string_length(chat_getmessagefilter) > 0 & string_indexof_string(lowercase(string1), chat_getmessagefilter, 0) = -1) {
				return 0
			}
			if (chatfilter4 = ^chatfilter_friends) {
				if (int3 = 1) {
					return 1
				}
				return 0
			}
			return 1
		}
		^chattype_autotyper, ^chattype_modautotyper -> {
		
			if (clock1 < VARCINT[199]) {
				return 0
			}
			if (compare(string2, removetags(string0)) = 0) {
				return 1
			}
			if (int3 = 2) {
				return 0
			}
			if (chat_getfilter_public ! ^chatfilter_autochat) {
				return 0
			}
			if (string_length(chat_getmessagefilter) > 0 & string_indexof_string(lowercase(string1), chat_getmessagefilter, 0) = -1) {
				return 0
			}
			return 1
		}
		^chattype_privatechat, ^chattype_modprivatechat -> {
		
			if (clock1 < VARCINT[175]) {
				return 0
			}
			if (int3 = 2) {
				return 0
			}
			if (VARP[287] = 1 & int2 = 0 & ~trade_partner_check(chattype0, string0, int3) = 0) {
				return 0
			}
			if (chat_getfilter_private = ^chatfilter_on) {
				return 1
			}
			if (chat_getfilter_private = ^chatfilter_friends & int3 = 1) {
				return 1
			}
			return 0
		}
		^chattype_tradereq, ^chattype_chalreq_trade -> {
		
			if (int3 = 2) {
				return 0
			}
			if (chat_getfilter_trade = ^chatfilter_on) {
				return 1
			}
			if (chat_getfilter_trade = ^chatfilter_friends & int3 = 1) {
				return 1
			}
			return 0
		}
		^chattype_loginlogoutnotification, ^chattype_privatechatout -> {
		
			if (clock1 < VARCINT[175]) {
				return 0
			}
			if (chattype0 = ^chattype_loginlogoutnotification & VARBIT[1627] = 0 & calc(clientclock - clock1) >= 500) {
				return 0
			}
			if (VARP[287] = 1 & int2 = 0 & ~trade_partner_check(chattype0, string0, int3) = 0) {
				return 0
			}
			if (chat_getfilter_private ! ^chatfilter_off) {
				return 1
			}
			return 0
		}
		^chattype_friendschat, ^chattype_chalreq_friendschat -> {
		
			if (compare(string2, removetags(string0)) = 0) {
				return 1
			}
			if (int3 = 2) {
				return 0
			}
			if (VARP[1054] = ^chatfilter_on) {
				return 1
			}
			if (VARP[1054] = ^chatfilter_friends & int3 = 1) {
				return 1
			}
			return 0
		}
		^chattype_friendschatnotification -> {
		
			if (VARP[1054] ! ^chatfilter_off) {
				return 1
			}
			return 0
		}
		^chattype_trade -> {
		
			if (chat_getfilter_trade ! ^chatfilter_off) {
				return 1
			}
			return 0
		}
		^chattype_playerrelated -> {
		
			if (int3 ! 2) {
				return 1
			}
			return 0
		}
		^chattype_broadcast -> {
		
			if (clock1 < VARCINT[202]) {
				return 0
			}
			string1, string3, int5 = ~chat_broadcast_parseurl(string1)
			if (int5 = 4 & reboottimer > 0) {
				return 0
			}
		}
	}
	return 1
}
