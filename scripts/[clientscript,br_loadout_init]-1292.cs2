// 1292 clientscript
fun br_loadout_init(component0: Component, component1: Component, component2: Component, component3: Component, component4: Component, component5: Component, component6: Component) {

	cc_deleteall(component5)
	val count7: Int = 0
	cc_create(component5, ^iftype_graphic, count7)
	count7 = calc(count7 + 1)
	cc_setposition(0, 0, ^setpos_abs_left, ^setpos_abs_centre)
	cc_setsize(36, 36, ^setsize_abs, ^setsize_abs)
	cc_setgraphic("miscgraphics,0")
	cc_create(component5, ^iftype_graphic, count7)
	count7 = calc(count7 + 1)
	cc_setposition(2, 0, ^setpos_abs_left, ^setpos_abs_centre)
	cc_setsize(29, 22, ^setsize_abs, ^setsize_abs)
	cc_setgraphic("bankbuttons,6")
	cc_create(component5, ^iftype_text, count7)
	cc_setcolour(0xff981f)
	if_setonmouserepeat {
		cc_colour_swapper(event_com, count7, ^white)
	}
	if_setonmouseleave {
		cc_colour_swapper(event_com, count7, 0xff981f)
	}
	count7 = calc(count7 + 1)
	cc_setposition(0, 0, ^setpos_abs_right, ^setpos_abs_centre)
	cc_setsize(38, 0, ^setsize_minus, ^setsize_minus)
	cc_settextfont(p12_full)
	cc_settextshadow(true)
	cc_settextalign(^settextalign_centre, ^settextalign_centre, 0)
	cc_settext("Drag items here to discard them.")
	val count8: Int = enum_getoutputcount(enum_2630)
	count0[count8]: Int
	val int9: Int = 0
	cc_deleteall(component3)
	count7 = 0
	while (count7 < count8) {
		if (enum(int, namedobj, enum_2630, count7) ! null) {
			count0[int9] = count7
			int9 = calc(int9 + 1)
		}
		cc_create(component3, ^iftype_graphic, count7)
		cc_sethide(true)
		count7 = calc(count7 + 1)
	}
	val int10: Int = int9
	if (int10 > 1) {
		~br_loadout_sort(count0, 0, calc(int10 - 1))
	}
	cc_deleteall(component1)
	cc_create(component1, ^iftype_graphic, 0)
	cc_setsize(36, 32, ^setsize_abs, ^setsize_abs)
	cc_setoutline(1)
	cc_setgraphicshadow(0x333333)
	cc_sethide(true)
	cc_settrans(125)
	val comsubid11: Int = cc_getid
	cc_create(component1, ^iftype_text, 1)
	cc_setcolour(0xff981f)
	cc_settextfont(p12_full)
	cc_settextalign(^settextalign_left, ^settextalign_centre, 0)
	cc_settextshadow(true)
	cc_sethide(true)
	val comsubid12: Int = cc_getid
	val height13: Int = 0
	val int14: Int = calc((36 - 32) / 2)
	val namedobj15: Namedobj = null
	val int16: Int = 0
	val string0: String = ""
	val string1: String = ""
	val int17: Int = 0
	int9 = 0
	while (int9 < int10) {
		if (cc_find(component3, count0[int9]) = ^true) {
			cc_sethide(false)
			cc_settiling(true)
			cc_setgraphic("tradebacking_light")
			cc_settrans(255)
			cc_setsize(0, 36, ^setsize_minus, ^setsize_abs)
			cc_setposition(0, height13, ^setpos_abs_centre, ^setpos_abs_top)
			cc_setop(1, "Add")
			cc_setop(10, "Examine")
			cc_setdraggable(component1, -1)
			cc_setdragdeadzone(5)
			cc_setdragdeadtime(5)
			namedobj15 = enum(int, namedobj, enum_2630, count0[int9])
			string1 = oc_name(namedobj15)
			cc_setopbase("<col=ff9040>${string1}</col>")
			.cc_create(component3, ^iftype_rectangle, count7)
			count7 = calc(count7 + 1)
			.cc_setsize(0, 36, ^setsize_minus, ^setsize_abs)
			.cc_setposition(0, height13, ^setpos_abs_centre, ^setpos_abs_top)
			.cc_setfill(true)
			cc_setonmouserepeat {
				script1015(event_com, .cc_getid, ^white, 225)
			}
			if (calc(int9 % 2) = 0) {
				.cc_setcolour(^white)
				.cc_settrans(255)
				cc_setonmouseleave {
					script1015(event_com, .cc_getid, ^white, 255)
				}
				cc_setonop {
					br_loadout_menuop(event_opindex, event_com, event_comsubid, .cc_getid, ^white, 225, ^white, 255, component1, component2, component5, component6)
				}
			} else {
				.cc_setcolour(^black)
				.cc_settrans(225)
				cc_setonmouseleave {
					script1015(event_com, .cc_getid, ^black, 225)
				}
				cc_setonop {
					br_loadout_menuop(event_opindex, event_com, event_comsubid, .cc_getid, ^white, 225, ^black, 225, component1, component2, component5, component6)
				}
			}
			.cc_create(component3, ^iftype_graphic, count7)
			count7 = calc(count7 + 1)
			.cc_setsize(36, 32, ^setsize_abs, ^setsize_abs)
			.cc_setposition(3, calc(height13 + int14), ^setpos_abs_left, ^setpos_abs_top)
			.cc_setoutline(1)
			.cc_setgraphicshadow(0x333333)
			if (oc_stackable(namedobj15) = true) {
				.cc_setobject(namedobj15, 5000)
			} else {
				.cc_setobject_nonum(namedobj15, 1)
			}
			.cc_create(component3, ^iftype_text, count7)
			count7 = calc(count7 + 1)
			.cc_setsize(calc(8 + 36), 36, ^setsize_minus, ^setsize_abs)
			.cc_setposition(3, height13, ^setpos_abs_right, ^setpos_abs_top)
			.cc_setcolour(0xff981f)
			.cc_settextfont(p12_full)
			.cc_settextalign(^settextalign_left, ^settextalign_centre, 0)
			.cc_settextshadow(true)
			int17, int16 = string_length(string1), 0
			if (int17 <= 0) {
				string1, int17 = "-", 1
			}
			if (int17 > 0 & parawidth(string1, 512, p12_full) > .cc_getwidth) {
				while (int17 > 1 & int16 = 0) {
					int17 = calc(int17 - 1)
					string0 = append(substring(string1, 0, int17), "...")
					if (parawidth(string0, 512, p12_full) <= .cc_getwidth) {
						string1, int16 = string0, 1
					}
				}
			}
			.cc_settext(string1)
			cc_setondrag {
				br_loadout_menudragging(event_com, event_comsubid, namedobj15, string1, component1, comsubid11, comsubid12, int14, event_mousex, event_mousey)
			}
			cc_setondragcomplete {
				br_loadout_insert(event_com, event_comsubid, event_drop, event_dropsubid, count0[int9], component1, comsubid11, comsubid12, component2, component5, component6)
			}
			height13 = calc(height13 + 36)
		}
		int9 = calc(int9 + 1)
	}
	if (height13 > if_getheight(component3)) {
		if_setscrollsize(0, height13, component3)
	} else {
		if_setscrollsize(0, 0, component3)
	}
	if_setscrollpos(0, 0, component3)
	~scrollbar_vertical(component4, component3, "scrollbar_dragger_v2,3", "scrollbar_dragger_v2,0", "scrollbar_dragger_v2,1", "scrollbar_dragger_v2,2", "scrollbar_v2,0", "scrollbar_v2,1")
	~br_loadout_drawloadout(component1, component2, component5, component6)
	if_setonvartransmit(component0)  {
		br_loadout_drawloadout_request(component0, component1, component2, component5, component6){VARP[2382], VARP[2383], VARP[2384], VARP[2385], VARP[2386], VARP[2387], VARP[2388], VARP[2389], VARP[1373], VARP[1573], VARP[1704], VARP[1666], VARP[309]}
	}
	if_setontimernull
	return 
}
