// 688 clientscript
fun trail_slidepuzzle_init(component0: Component, component1: Component, component2: Component) {

	val int3: Int = calc(37 + (if_getwidth(component0) - 5 * 37) / (5 - 1))
	val int4: Int = calc(37 + (if_getheight(component0) - 5 * 37) / (5 - 1))
	val int5: Int = pow(5, 2)
	val int6: Int = calc(int5 - 1)
	cc_deleteall(component0)
	val int7: Int = 0
	while (int7 < int5) {
		cc_create(component0, ^iftype_text, int7)
		cc_setsize(37, 37, ^setsize_abs, ^setsize_abs)
		cc_setposition(calc(int7 % 5 * int3), calc(int7 / 5 * int4), ^setpos_abs_left, ^setpos_abs_top)
		cc_setopbase("<col=ff9040>Sliding piece</col>")
		int7 = calc(int7 + 1)
	}
	int7 = 0
	while (int7 < int6) {
		cc_create(component0, ^iftype_model, calc(int7 + int5))
		cc_setsize(37, 37, ^setsize_abs, ^setsize_abs)
		cc_setmodelangle(0, 0, 513, 0, 0, 1800)
		int7 = calc(int7 + 1)
	}
	~trail_slidepuzzle_synch(component0, int5, int6, int3, int4, component1, component2)
	if_setoninvtransmit(component0)  {
		trail_slidepuzzle_synch(false, component0, int5, int6, int3, int4, component1, component2){inv_140, inv_221, inv_222}
	}
	if_setonvartransmit(component0)  {
		trail_slidepuzzle_synch(true, component0, int5, int6, int3, int4, component1, component2){VARP[261]}
	}
	return 
}
