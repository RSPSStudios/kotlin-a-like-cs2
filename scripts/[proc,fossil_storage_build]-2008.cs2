// 2008 proc
fun fossil_storage_build(component0: Component, component1: Component, component2: Component, component3: Component) {

	cc_deleteall(component1)
	val int4: Int = 0
	val int5: Int = 0
	val int6: Int = 10
	val height7: Int = 0
	val int8: Int = 10
	val int9: Int = int8
	val num10: Int = 0
	val int11: Int = 5
	val namedobj12: Namedobj = enum(int, namedobj, enum_1782, int4)
	while (namedobj12 ! null) {
		if (namedobj12 = rare_fossilised_limbs_21610 | namedobj12 = rare_fossilised_spine_21612 | namedobj12 = rare_fossilised_ribs_21614 | namedobj12 = rare_fossilised_pelvis_21616 | namedobj12 = rare_fossilised_skull_21618 | namedobj12 = rare_fossilised_tusk_21620) {
			int11 = 6
		} else {
			int11 = 5
		}
		if (compare(enum(obj, string, enum_1783, namedobj12), "") ! 0) {
			if (int4 ! 0) {
				height7 = calc(3 + height7 + (if_getheight(component1) - int6) / 6)
				int9 = int8
			}
			cc_create(component0, ^iftype_text, int5)
			cc_setposition(0, height7, ^setpos_abs_left, ^setpos_abs_top)
			cc_setsize(100, 32, ^setsize_abs, ^setsize_abs)
			cc_settextfont(p12_full)
			cc_settextshadow(true)
			cc_settextalign(^settextalign_left, ^settextalign_top, 0)
			cc_setcolour(0xff981f)
			cc_settext(enum(obj, string, enum_1783, namedobj12))
			int5 = calc(int5 + 1)
		}
		cc_create(component1, ^iftype_graphic, int4)
		num10 = ~fossil_storage_get(namedobj12)
		cc_setsize(36, 32, ^setsize_abs, ^setsize_abs)
		cc_setposition(int9, height7, ^setpos_abs_left, ^setpos_abs_top)
		cc_setobject(namedobj12, num10)
		cc_setgraphicshadow(0x333333)
		cc_setopbase("<col=ff9040>${oc_name(namedobj12)}</col>")
		if (num10 > 0) {
			cc_setoutline(1)
			cc_settrans(0)
			cc_setop(1, "Withdraw")
			cc_setop(2, "Withdraw 5")
			cc_setop(3, "Withdraw 10")
			cc_setop(4, "Withdraw All")
			cc_setop(5, "Withdraw X")
			cc_setop(10, "Examine")
		} else {
			cc_setoutline(0)
			cc_settrans(50)
			cc_clearops
			cc_setop(10, "Examine")
		}
		int4 = calc(int4 + 1)
		int9 = calc(3 + int9 + if_getwidth(component1) / int11)
		namedobj12 = enum(int, namedobj, enum_1782, int4)
	}
	val int13: Int = 0
	height7 = calc(height7 + 32)
	if (height7 > if_getheight(component1)) {
		int13 = if_getscrolly(component1)
		if_setscrollsize(0, height7, component1)
	} else {
		if_setscrollsize(0, 0, component1)
	}
	~scrollbar_resize(component3, component1, int13)
	return 
}
