// 3846 proc
fun settings_create_toggle(int0: Int, int1: Int, int2: Int, int3: Int, trans4: Int, struct5: Struct, component6: Component, component7: Component, component8: Component): Int, Int, Int, Int {

	val boolean9: Boolean = ~on_mobile
	val string0: String = struct_param(struct5, param_1086)
	if (boolean9 = true & string_length(struct_param(struct5, param_1087)) > 0) {
		string0 = struct_param(struct5, param_1087)
	}
	val string1: String = struct_param(struct5, param_1096)
	val int10: Int = 0
	val int11: Int = VARBIT[9665]
	val boolean12: Boolean = struct_param(struct5, param_1119)
	if (boolean9 = true & string_length(struct_param(struct5, param_1097)) > 0) {
		string1 = struct_param(struct5, param_1097)
	}
	if (string_length(string1) > 0) {
		int10 = calc(paraheight(string1, if_getwidth(component7) - 45, p12_full) * 14)
	}
	int1 = calc(int1 + int10)
	if (boolean12 = true | int11 = 1) {
		int10 = 0
	}
	val int13: Int = struct_param(struct5, param_1077)
	val boolean14: Boolean = struct_param(struct5, param_1085)
	val int15: Int = ~script3957(struct5)
	val boolean16: Boolean = struct_param(struct5, param_1084)
	val int17: Int = calc(paraheight(string0, if_getwidth(component7) - 45, b12_full) * 14)
	if (boolean9 = true & int17 < 20) {
		int17 = 20
	}
	val int18: Int = calc(int17 + 12 + int10)
	cc_create(component6, ^iftype_rectangle, int3)
	cc_setsize(10, int18, ^setsize_minus, ^setsize_abs)
	cc_setposition(0, int0, ^setpos_abs_centre, ^setpos_abs_top)
	cc_setfill(true)
	cc_setop(1, "Toggle")
	cc_setonop {
		settings_toggle_op(struct5, int13, component7, calc(int2 + 2), boolean16, boolean14)
	}
	cc_setcolour(^white)
	cc_settrans(255)
	int3 = calc(int3 + 1)
	cc_create(component7, ^iftype_rectangle, int2)
	cc_setsize(10, int18, ^setsize_minus, ^setsize_abs)
	cc_setposition(0, int0, ^setpos_abs_centre, ^setpos_abs_top)
	cc_setfill(true)
	cc_setcolour(^black)
	cc_settrans(trans4)
	if (boolean14 = true) {
		~settings_toggle_choose_transmit(component7, calc(int2 + 2), boolean16, int13, struct5, trans4)
	}
	if (boolean9 = false & int15 = 1) {
		cc_setonmouseover {
			cc_settrans(component7, int2, 240, null)
		}
		cc_setonmouseleave {
			cc_settrans(component7, int2, trans4, null)
		}
	}
	int2 = calc(int2 + 1)
	cc_create(component7, ^iftype_text, int2)
	cc_setsize(45, int17, ^setsize_minus, ^setsize_abs)
	cc_setposition(10, calc(int0 + 6), ^setpos_abs_left, ^setpos_abs_top)
	cc_settext(string0)
	cc_settextfont(b12_full)
	cc_settextshadow(true)
	if (int15 = 1) {
		cc_setcolour(0xff981f)
	} else {
		cc_setcolour(0x9f9f9f)
	}
	cc_settextalign(^settextalign_left, ^settextalign_centre, 14)
	if (boolean9 = false & int11 = 1 & string_length(string1) > 0) {
		cc_setonmouserepeat {
			tooltip_mouserepeat(component7, int2, component8, string1, 25, 190)
		}
		cc_setonmouseleave {
			deltooltip(component8)
		}
	}
	int2 = calc(int2 + 1)
	cc_create(component7, ^iftype_graphic, int2)
	cc_setsize(18, 18, ^setsize_abs, ^setsize_abs)
	cc_setposition(10, calc(int0 + (int18 / 2 - 9)), ^setpos_abs_right, ^setpos_abs_top)
	val int19: Int = ~settings_get_toggle(int13)
	if (boolean16 = true) {
		int19 = calc(1 - int19)
	}
	if (int19 = 1) {
		if (int15 = 1) {
			cc_setgraphic("toggle_box,1")
		} else {
			cc_setgraphic("toggle_box,3")
		}
	} else if (int15 = 1) {
		cc_setgraphic("toggle_box,0")
	} else {
		cc_setgraphic("toggle_box,2")
	}
	int2 = calc(int2 + 1)
	if (boolean12 = false & int11 = 0 & int10 > 0) {
		cc_create(component7, ^iftype_text, int2)
		cc_setsize(45, int10, ^setsize_minus, ^setsize_abs)
		cc_setposition(10, calc(int17 + int0 + 6), ^setpos_abs_left, ^setpos_abs_top)
		cc_settext(string1)
		cc_settextfont(p12_full)
		cc_settextshadow(true)
		cc_setcolour(0x9f9f9f)
		cc_settextalign(^settextalign_left, ^settextalign_centre, 14)
		int2 = calc(int2 + 1)
	}
	int0 = calc(int18 + int0)
	return int0, int1, int2, int3
}
