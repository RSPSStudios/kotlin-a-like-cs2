// 3509 proc
fun adventurepath_voucher_init(int0: Int, text0: String) {

	val enum1: Enum = enum(int, enum, enum_2621, int0)
	if (enum1 = null) {
		if_close
		mes("The voucher has already been used.")
		return 
	}
	val component2: Component = interface_643:4
	val component3: Component = interface_643:3
	val component4: Component = interface_643:0
	if_setsize(500, 334, ^setsize_abs, ^setsize_abs, component4)
	if_setposition(6, 0, ^setpos_abs_left, ^setpos_abs_top, component4)
	cc_deleteall(component2)
	cc_deleteall(component3)
	cc_deleteall(component4)
	val width5: Int = if_getwidth(component3)
	val height6: Int = if_getheight(component3)
	val int7: Int = calc(width5 - 64 - 36 * 2)
	val int8: Int = 0
	val count9: Int = enum_getoutputcount(enum1)
	if (count9 = 0) {
		if_close
		return 
	}
	val int10: Int = 0
	struct0[count9]: Struct
	val enum11: Enum = null
	val enum12: Enum = null
	val count13: Int = 0
	val int14: Int = 0
	val int15: Int = 0
	val int16: Int = 0
	val height17: Int = 0
	while (count13 < count9) {
		struct0[count13] = enum(int, struct, enum1, count13)
		if (struct0[count13] ! null) {
			enum11 = struct_param(struct0[count13], param_838)
			enum12 = struct_param(struct0[count13], param_840)
			if (enum11 ! null & enum12 ! null) {
				if (int14 = 0) {
					cc_create(component3, ^iftype_text, int10)
					cc_setsize(calc(16 + width5), 40, ^setsize_abs, ^setsize_abs)
					cc_setposition(0, height17, ^setpos_abs_left, ^setpos_abs_top)
					cc_settext("<u=ff981f>Free to play rewards</u>")
					cc_settextfont(b12_full)
					cc_settextshadow(true)
					cc_setcolour(0xff981f)
					cc_settextalign(^settextalign_centre, ^settextalign_centre, 0)
					int14 = 1
					int10 = calc(int10 + 1)
					height17 = calc(height17 + 40)
				}
				int10, int16 = ~adventurepath_voucher_entry(height17, component3, int7, int10, enum11, enum12, struct_param(struct0[count13], param_842), struct_param(struct0[count13], param_837), int16, struct_param(struct0[count13], param_844))
				height17 = calc(height17 + 88)
			}
		}
		count13 = calc(count13 + 1)
	}
	count13 = 0
	while (count13 < count9) {
		if (struct0[count13] ! null) {
			enum11 = struct_param(struct0[count13], param_839)
			enum12 = struct_param(struct0[count13], param_841)
			if (enum11 ! null & enum12 ! null) {
				if (int15 = 0) {
					cc_create(component3, ^iftype_text, int10)
					cc_setsize(calc(16 + width5), 40, ^setsize_abs, ^setsize_abs)
					cc_setposition(0, height17, ^setpos_abs_left, ^setpos_abs_top)
					cc_settext("<u=ff981f>Member rewards</u>")
					cc_settextfont(b12_full)
					cc_settextshadow(true)
					cc_setcolour(0xff981f)
					cc_settextalign(^settextalign_centre, ^settextalign_centre, 0)
					int15 = 1
					int10 = calc(int10 + 1)
					height17 = calc(height17 + 40)
				}
				int10, int16 = ~adventurepath_voucher_entry(height17, component3, int7, int10, enum11, enum12, struct_param(struct0[count13], param_843), struct_param(struct0[count13], param_837), int16, struct_param(struct0[count13], param_845))
				height17 = calc(height17 + 88)
			}
		}
		count13 = calc(count13 + 1)
	}
	height6 = if_getheight(component4)
	val int18: Int = calc(height6 - if_getheight(component3))
	if (height17 > height6) {
		if_setscrollsize(0, height17, component3)
		~scrollbar_vertical(component2, component3, "scrollbar_dragger_v2,3", "scrollbar_dragger_v2,0", "scrollbar_dragger_v2,1", "scrollbar_dragger_v2,2", "scrollbar_v2,0", "scrollbar_v2,1")
		if_sethide(false, component2)
	} else {
		if_setsize(if_getwidth(component4), calc(int18 + height17), ^setsize_abs, ^setsize_abs, component4)
		if_setposition(if_getx(component4), calc(int8 / 2), ^setpos_abs_left, ^setpos_abs_top, component4)
		if_sethide(true, component2)
	}
	~stoneborder(interface_643:1, text0, 0)
	return 
}
