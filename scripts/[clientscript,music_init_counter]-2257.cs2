// 2257 clientscript
fun music_init_counter(component0: Component, count1: Int) {

	if_setontimernull
	flags0[calc(21 + 1)]: Int
	flags0[1] = VARP[20]
	flags0[2] = VARP[21]
	flags0[3] = VARP[22]
	flags0[4] = VARP[23]
	flags0[5] = VARP[24]
	flags0[6] = VARP[25]
	flags0[7] = VARP[298]
	flags0[8] = VARP[311]
	flags0[9] = VARP[346]
	flags0[10] = VARP[414]
	flags0[11] = VARP[464]
	flags0[12] = VARP[598]
	flags0[13] = VARP[662]
	flags0[14] = VARP[721]
	flags0[15] = VARP[906]
	flags0[16] = VARP[1009]
	flags0[17] = VARP[1338]
	flags0[18] = VARP[1681]
	flags0[19] = VARP[2065]
	flags0[20] = VARP[2237]
	flags0[21] = VARP[2950]
	val int2: Int = 0
	val coord3: Coord = null
	val int4: Int = 0
	val count5: Int = 0
	while (count5 < count1) {
		int2 = enum(int, int, enum_818, count5)
		coord3 = enum(int, coord, enum_819, int2)
		if (coord3 ! null) {
			if (testbit(flags0[coordx(coord3)], coordz(coord3)) = ^true) {
				int4 = calc(int4 + 1)
			} else if (int2 = 331 & VARBIT[1028] > 35) {
				int4 = calc(int4 + 1)
			}
		} else {
			int4 = calc(int4 + 1)
		}
		count5 = calc(count5 + 1)
	}
	if_settext("${~tostring_spacer(~min(int4, count1), ",")} / ${~tostring_spacer(count1, ",")}", component0)
	return 
}
