// 499 proc
fun makeover_drawmodels(component0: Component, enum1: Enum, enum2: Enum, enum3: Enum, model4: Model, int5: Int, int6: Int, int7: Int, int8: Int, int9: Int) {

	val int10: Int = 0
	val string0: String = enum(int, string, enum1, int10)
	while (string_length(string0) > 0) {
		cc_create(component0, ^iftype_rectangle, int10)
		cc_setfill(true)
		cc_setcolour(^black)
		cc_settrans(255)
		cc_setop(1, string0)
		int10 = calc(int10 + 1)
		string0 = enum(int, string, enum1, int10)
	}
	if (int10 <= 0) {
		return 
	}
	val int11: Int = 0
	if (int9 = 1) {
		int11 = calc(int10 / 2)
		if (calc(int10 % 2) = 1) {
			int11 = calc(int11 + 1)
		}
	} else {
		int11 = int10
	}
	val int12: Int = calc(if_getwidth(component0) / int11)
	val int13: Int = 40
	val int14: Int = 0
	if (int12 <= int13) {
		int13 = int12
	} else {
		int14 = calc((int12 - int13) / 2)
	}
	val int15: Int = calc((int12 - 25) / 2)
	val int16: Int = calc(if_getheight(component0) - 20)
	if (int9 = 1) {
		int16 = calc(int16 / 2)
	}
	val int17: Int = calc(20 + int16 - 25)
	val y18: Int = 0
	if (int9 = 1) {
		y18 = calc(int17 + int16)
	}
	val int19: Int = int10
	val int20: Int = 0
	val int21: Int = 0
	val y22: Int = 0
	val model23: Model = null
	val int24: Int = 0
	while (int20 < int10) {
		if (int9 = 1 & int20 >= int11) {
			int24, y22 = 1, calc(20 + int16)
			int21 = calc((int20 - int11) * int12)
		} else {
			int24, y22, int21 = 0, 20, calc(int20 * int12)
		}
		if (cc_find(component0, int20) = ^true) {
			cc_setsize(int13, int16, ^setsize_abs, ^setsize_abs)
			cc_setposition(calc(int21 + int14), y22, ^setpos_abs_left, ^setpos_abs_top)
		}
		cc_create(component0, ^iftype_model, int19)
		int19 = calc(int19 + 1)
		cc_setposition(int21, y22, ^setpos_abs_left, ^setpos_abs_top)
		cc_setsize(int12, int16, ^setsize_abs, ^setsize_abs)
		cc_setmodel(enum(int, model, enum2, int20))
		cc_setmodelangle(0, int6, 0, int7, 0, int5)
		if (enum3 ! null) {
			model23 = enum(int, model, enum3, int20)
			if (model23 ! null) {
				cc_create(component0, ^iftype_model, int19)
				int19 = calc(int19 + 1)
				cc_setposition(int21, y22, ^setpos_abs_left, ^setpos_abs_top)
				cc_setsize(int12, int16, ^setsize_abs, ^setsize_abs)
				cc_setmodel(model23)
				cc_setmodelangle(0, int6, 0, int7, 0, int5)
			}
		}
		if (model4 ! null) {
			cc_create(component0, ^iftype_model, int19)
			int19 = calc(int19 + 1)
			cc_setposition(int21, y22, ^setpos_abs_left, ^setpos_abs_top)
			cc_setsize(int12, int16, ^setsize_abs, ^setsize_abs)
			cc_setmodel(model4)
			cc_setmodelangle(0, int6, 0, int7, 0, int5)
		}
		cc_create(component0, ^iftype_graphic, int19)
		int19 = calc(int19 + 1)
		cc_setsize(25, 25, ^setsize_abs, ^setsize_abs)
		if (int24 = 1) {
			cc_setposition(calc(int21 + int15), y18, ^setpos_abs_left, ^setpos_abs_top)
		} else {
			cc_setposition(calc(int21 + int15), int17, ^setpos_abs_left, ^setpos_abs_top)
		}
		cc_setgraphic("overlay_multiway")
		~makeover_indicator(int20, int8)
		cc_setonvartransmit {
			makeover_indicator(event_com, event_comsubid, int20, int8){VARP[261], VARP[262]}
		}
		int20 = calc(int20 + 1)
	}
	return 
}
