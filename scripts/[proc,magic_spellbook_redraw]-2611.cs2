// 2611 proc
fun magic_spellbook_redraw(component0: Component, component1: Component, component2: Component, component3: Component, component4: Component, component5: Component, component6: Component, component7: Component, component8: Component, component9: Component, string0: String, string1: String, boolean10: Boolean) {

	val int11: Int = 190
	val int12: Int = 261
	val int13: Int = 0
	if (boolean10 = true) {
		if_setsize(6, 240, ^setsize_minus, ^setsize_abs, component3)
		int11, int12 = calc(190 - 6), 240
		if_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_top, component3)
		if_sethide(false, component4)
		int13 = calc(~max(parawidth(string0, 190, p11_full), parawidth(string1, 190, p11_full)) + 14)
		if_setsize(int13, 0, ^setsize_abs, ^setsize_minus, component5)
		if_setsize(int13, 0, ^setsize_abs, ^setsize_minus, component6)
		int13 = calc((190 - int13 * 2) / 3)
		if_setposition(int13, 0, ^setpos_abs_left, ^setpos_abs_centre, component5)
		if_setposition(int13, 0, ^setpos_abs_right, ^setpos_abs_centre, component6)
	} else if (VARBIT[6718] = 1) {
		if_setsize(0, 0, ^setsize_minus, ^setsize_minus, component3)
		if_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_centre, component3)
		if_sethide(true, component4)
		~script2603(null, boolean10, component5, component6, component0, component1, component7, component8, component9, component2, string0, string1)
	} else {
		if_setsize(6, 240, ^setsize_minus, ^setsize_abs, component3)
		int11, int12 = calc(190 - 6), 240
		if_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_top, component3)
		if_sethide(false, component4)
		if_setsize(calc(parawidth(string1, 190, p11_full) + 14), 0, ^setsize_abs, ^setsize_minus, component6)
		if_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_centre, component6)
	}
	cc_deleteall(component0)
	cc_deleteall(component1)
	cc_deleteall(component2)
	val enum14: Enum = enum(int, enum, enum_1981, VARBIT[4070])
	if (enum14 ! enum_1982) {
		~magic_spellbook_hidespells(enum_1982)
	}
	if (enum14 ! enum_1983) {
		~magic_spellbook_hidespells(enum_1983)
	}
	if (enum14 ! enum_1984) {
		~magic_spellbook_hidespells(enum_1984)
	}
	if (enum14 ! enum_1985) {
		~magic_spellbook_hidespells(enum_1985)
	}
	if (enum14 = null) {
		return 
	}
	val count15: Int = enum_getoutputcount(enum14)
	int0[count15]: Int
	val int16: Int = 0
	val obj17: Obj = null
	val int18: Int = 0
	if (boolean10 = false & VARBIT[6718] = 1) {
		while (int18 < count15) {
			obj17 = enum(int, obj, enum14, int18)
			if (~league_world = 1) {
				obj17 = ~script3159(obj17)
			}
			if_sethide(false, oc_param(obj17, spell_button))
			int0[int16] = int18
			int16 = calc(int16 + 1)
			int18 = calc(int18 + 1)
		}
	} else {
		while (int18 < count15) {
			obj17 = enum(int, obj, enum14, int18)
			if (~league_world = 1) {
				obj17 = ~script3159(obj17)
			}
			if (~magic_spellbook_passfilter(obj17) = 1) {
				if_sethide(false, oc_param(obj17, spell_button))
				int0[int16] = int18
				int16 = calc(int16 + 1)
			} else {
				if_sethide(true, oc_param(obj17, spell_button))
			}
			int18 = calc(int18 + 1)
		}
	}
	if (int16 >= 2) {
		~magic_spellbook_sort(int0, 0, calc(int16 - 1), enum14)
	} else if (int16 <= 0) {
		cc_create(component0, ^iftype_text, 0)
		cc_setsize(0, 0, ^setsize_minus, ^setsize_minus)
		cc_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_centre)
		cc_setcolour(0xff981f)
		cc_settextfont(p12_full)
		cc_settextshadow(true)
		cc_settextalign(^settextalign_centre, ^settextalign_centre, 0)
		cc_settext("No spells match your selected filters.")
		return 
	}
	val int19: Int = 24
	val int20: Int = 0
	val int21: Int = 0
	val int22: Int = 0
	val int23: Int = 0
	val height24: Int = int12
	if (boolean10 = true) {
		if (int16 <= 15) {
			int19, int20 = 40, 3
		} else if (int16 <= 20) {
			int19, int20 = 40, 4
		} else {
			int20 = ~max(4, ~min(7, calc((int16 + 8) / 9)))
		}
		int23 = ~max(0, ~min(scale(5, 7, int19), calc((int11 - int19 * int20) / (int20 - 1))))
		int21 = ~max(1, calc((int16 + (int20 - 1)) / int20))
		if (int21 >= 2) {
			int22 = ~max(0, ~min(int23, calc((int12 - int19 * int21) / (int21 - 1))))
		}
		height24 = calc(int21 * int19 + (int21 - 1) * int22)
		if_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_centre, component0)
	} else if (VARBIT[6718] = 1) {
		when (VARBIT[4070]): Int {
			1 -> {
			
				int20, int21, int23, int22 = 4, 7, 20, 4
				if_setposition(2, 8, ^setpos_abs_centre, ^setpos_abs_top, component0)
			}
			2 -> {
			
				int20, int21, int23, int22 = 6, 8, 6, 5
				if_setposition(0, 8, ^setpos_abs_centre, ^setpos_abs_top, component0)
			}
			3 -> {
			
				int20, int21, int23, int22 = 4, 9, 21, 5
				if_setposition(0, 3, ^setpos_abs_centre, ^setpos_abs_top, component0)
			}
		else -> {
		
			int20, int21, int23, int22 = 7, 10, 0, 0
			if_setposition(1, 15, ^setpos_abs_centre, ^setpos_abs_top, component0)
		}
		}
		height24 = calc(int21 * int19 + (int21 - 1) * int22)
	} else {
		if (int16 <= 28) {
			int20 = 4
		} else {
			int20 = ~max(4, ~min(7, calc((int16 + 8) / 9)))
		}
		int23 = ~max(0, ~min(int19, calc((int11 - int19 * int20) / (int20 - 1))))
		int21 = ~max(1, calc((int16 + (int20 - 1)) / int20))
		if (int21 >= 2) {
			int22 = ~max(0, ~min(int23, calc((int12 - int19 * int21) / (int21 - 1))))
		}
		height24 = ~max(calc(int21 * int19 + (int21 - 1) * int22), calc(int12 - 30))
		if_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_centre, component0)
	}
	if_setsize(calc(int20 * int19 + (int20 - 1) * int23), height24, ^setsize_abs, ^setsize_abs, component0)
	val component25: Component = null
	val int26: Int = calc(int19 + int23)
	val int27: Int = calc(int19 + int22)
	val x28: Int = 0
	val y29: Int = 0
	int18 = 0
	while (int18 < int16) {
		obj17 = enum(int, obj, enum14, int0[int18])
		if (~league_world = 1) {
			obj17 = ~script3159(obj17)
		}
		component25 = oc_param(obj17, spell_button)
		if_setsize(int19, int19, ^setsize_abs, ^setsize_abs, component25)
		x28, y29 = calc(int18 % int20 * int26), calc(int18 / int20 * int27)
		if_setposition(x28, y29, ^setpos_abs_left, ^setpos_abs_top, component25)
		if (~script2614(obj17, component25) = 1) {
			if (int19 >= 40) {
				if_setgraphic(oc_param(obj17, spell_graphic2_on), component25)
			} else {
				if_setgraphic(oc_param(obj17, spell_graphic1_on), component25)
			}
		} else if (int19 >= 40) {
			if_setgraphic(oc_param(obj17, spell_graphic2_off), component25)
		} else {
			if_setgraphic(oc_param(obj17, spell_graphic1_off), component25)
		}
		~magic_spellbook_modifyops(component25)
		if (boolean10 = true) {
			cc_create(component1, ^iftype_graphic, int18)
			cc_setsize(int19, int19, ^setsize_abs, ^setsize_abs)
			cc_setposition(x28, y29, ^setpos_abs_left, ^setpos_abs_top)
			cc_setobject(obj17, 1)
			cc_settrans(255)
			cc_setonclick({
				script2612(obj17, component1, component2, int12)
			})
		} else {
			if_setonmouserepeat({
				magic_spellbook_settooltip(true, obj17, event_com, -1, component2, int12)
			}, component25)
			if_setonmouseleave({
				magic_spellbook_settooltip(false, obj17, event_com, -1, component2, int12)
			}, component25)
		}
		int18 = calc(int18 + 1)
	}
	return 
}
