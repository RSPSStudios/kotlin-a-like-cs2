// 690 proc
fun trail_slidepuzzle_synch(component0: Component, int1: Int, int2: Int, int3: Int, int4: Int, component5: Component, component6: Component) {

	val inv7: Inv = inv_140
	if (VARP[261] = 8) {
		inv7 = inv_222
	} else if (VARP[261] = 7) {
		inv7 = inv_221
	}
	val enum8: Enum = null
	val enum9: Enum = null
	enum8, enum9 = enum(int, enum, enum_1864, VARP[261]), enum(int, enum, enum_1865, VARP[261])
	if (VARP[261] = 7 | VARP[261] = 8) {
		if_sethide(true, component5)
		if_sethide(false, component6)
	} else {
		if_sethide(false, component5)
		if_sethide(true, component6)
	}
	val obj10: Obj = null
	val int11: Int = 0
	while (int11 < int1) {
		if (enum8 ! null & enum9 ! null) {
			obj10 = inv_getobj(inv7, int11)
			~trail_slidepuzzle_setint(int11, enum(obj, int, enum9, obj10))
			if (cc_find(component0, int11) = ^true) {
				if (VARP[261] = 8) {
					cc_clearops
					cc_setonopnull
				} else {
					cc_setop(1, "Move")
					cc_setonop {
						trail_slidepuzzle_op(event_opindex, event_com, event_comsubid, int1, int2, int3, int4)
					}
				}
			}
			if (int11 < int2 & cc_find(component0, calc(int1 + int11)) = ^true) {
				obj10 = enum(int, namedobj, enum8, int11)
				if (obj10 ! null) {
					cc_setmodel(oc_param(obj10, param_186))
				} else {
					cc_setmodel(null)
				}
			}
		} else {
			~trail_slidepuzzle_setint(int11, -1)
			if (int11 < int2 & cc_find(component0, calc(int1 + int11)) = ^true) {
				cc_setmodel(null)
			}
		}
		int11 = calc(int11 + 1)
	}
	~trail_slidepuzzle_position(component0, int1, int2, int3, int4)
	return 
}
