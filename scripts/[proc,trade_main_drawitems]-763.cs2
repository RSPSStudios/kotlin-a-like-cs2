// 763 proc
fun trade_main_drawitems(size0: Int, int1: Int, component2: Component, component3: Component, component4: Component, component5: Component) {

	if (VARBIT[4374] = 1) {
		if_settext("Trade modified", component3)
	} else {
		if_settext("", component3)
	}
	if (VARBIT[4375] = 1) {
		if_settext("Trade modified", component5)
	} else {
		if_settext("", component5)
	}
	int0[4]: Int
	val int6: Int = calc(size0 / 4)
	if (int6 < 2) {
		int6 = 2
	}
	val int7: Int = calc((if_getheight(component2) - int6 * 32) / (int6 - 1))
	val int8: Int = calc((if_getwidth(component2) - 12 - 4 * 36) / 3)
	int0[0] = 6
	int0[1] = calc(int0[0] + int8 + 36)
	int0[2] = calc(int0[1] + int8 + 36)
	int0[3] = calc(int0[2] + int8 + 36)
	int1[size0]: Int
	int1[0] = VARCINT[81]
	int1[1] = VARCINT[82]
	int1[2] = VARCINT[83]
	int1[3] = VARCINT[84]
	int1[4] = VARCINT[85]
	int1[5] = VARCINT[86]
	int1[6] = VARCINT[87]
	int1[7] = VARCINT[88]
	int1[8] = VARCINT[89]
	int1[9] = VARCINT[90]
	int1[10] = VARCINT[91]
	int1[11] = VARCINT[92]
	int1[12] = VARCINT[93]
	int1[13] = VARCINT[94]
	int1[14] = VARCINT[95]
	int1[15] = VARCINT[96]
	int1[16] = VARCINT[97]
	int1[17] = VARCINT[98]
	int1[18] = VARCINT[99]
	int1[19] = VARCINT[100]
	int1[20] = VARCINT[101]
	int1[21] = VARCINT[102]
	int1[22] = VARCINT[104]
	int1[23] = VARCINT[105]
	int1[24] = VARCINT[106]
	int1[25] = VARCINT[107]
	int1[26] = VARCINT[108]
	int1[27] = VARCINT[109]
	val obj9: Obj = null
	val int10: Int = 0
	val int11: Int = 0
	val index12: Int = 0
	val int13: Int = 0
	val y14: Int = 0
	val size15: Int = 0
	while (size15 < size0) {
		if (cc_find(component2, size15) = ^true & .cc_find(component2, calc(size0 + size15)) = ^true) {
			obj9 = inv_getobj(inv_90, size15)
			if (obj9 ! null) {
				int10 = inv_getnum(inv_90, size15)
				cc_sethide(false)
				cc_setobject(obj9, int10)
				cc_setop(1, "Remove")
				cc_setop(2, "Remove-5")
				cc_setop(3, "Remove-10")
				cc_setop(4, "Remove-All")
				cc_setop(5, "Remove-X")
				cc_setop(10, "Examine")
				cc_setopbase("<col=ff9040>${oc_name(obj9)}</col>")
				~trade_tooltip(int10, int1[size15], trademain:32)
			} else {
				cc_sethide(true)
				cc_clearops
				cc_setonmouserepeat(null)
				cc_setonmouseleave(null)
			}
			index12, int11 = calc(size15 % 4), calc(size15 / 4)
			int13 = int0[index12]
			y14 = calc(int11 * (32 + int7))
			cc_setposition(int13, y14, ^setpos_abs_left, ^setpos_abs_top)
			.cc_setposition(calc(int13 + int1), y14, ^setpos_abs_left, ^setpos_abs_top)
		}
		size15 = calc(size15 + 1)
	}
	int8 = calc((if_getwidth(component4) - 12 - 4 * 36) / 3)
	int0[0] = 6
	int0[1] = calc(int0[0] + int8 + 36)
	int0[2] = calc(int0[1] + int8 + 36)
	int0[3] = calc(int0[2] + int8 + 36)
	int1[0] = VARCINT[110]
	int1[1] = VARCINT[111]
	int1[2] = VARCINT[112]
	int1[3] = VARCINT[113]
	int1[4] = VARCINT[114]
	int1[5] = VARCINT[115]
	int1[6] = VARCINT[116]
	int1[7] = VARCINT[117]
	int1[8] = VARCINT[118]
	int1[9] = VARCINT[119]
	int1[10] = VARCINT[120]
	int1[11] = VARCINT[121]
	int1[12] = VARCINT[122]
	int1[13] = VARCINT[123]
	int1[14] = VARCINT[124]
	int1[15] = VARCINT[125]
	int1[16] = VARCINT[126]
	int1[17] = VARCINT[127]
	int1[18] = VARCINT[128]
	int1[19] = VARCINT[129]
	int1[20] = VARCINT[130]
	int1[21] = VARCINT[131]
	int1[22] = VARCINT[132]
	int1[23] = VARCINT[133]
	int1[24] = VARCINT[134]
	int1[25] = VARCINT[135]
	int1[26] = VARCINT[136]
	int1[27] = VARCINT[137]
	size15 = 0
	while (size15 < size0) {
		if (cc_find(component4, size15) = ^true & .cc_find(component4, calc(size0 + size15)) = ^true) {
			obj9 = invother_getobj(inv_90, size15)
			if (obj9 ! null) {
				int10 = invother_getnum(inv_90, size15)
				cc_sethide(false)
				cc_setobject(obj9, int10)
				cc_setop(10, "Examine")
				cc_setopbase("<col=ff9040>${oc_name(obj9)}</col>")
				~trade_tooltip(int10, int1[size15], trademain:32)
			} else {
				cc_sethide(true)
				cc_clearops
				cc_setonmouserepeat(null)
				cc_setonmouseleave(null)
			}
			index12, int11 = calc(size15 % 4), calc(size15 / 4)
			int13 = int0[index12]
			y14 = calc(int11 * (32 + int7))
			cc_setposition(int13, y14, ^setpos_abs_left, ^setpos_abs_top)
			.cc_setposition(calc(int13 + int1), y14, ^setpos_abs_left, ^setpos_abs_top)
		}
		size15 = calc(size15 + 1)
	}
	return 
}
