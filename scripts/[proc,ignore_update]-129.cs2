// 129 proc
fun ignore_update(component0: Component, component1: Component, component2: Component, component3: Component, component4: Component, component5: Component, component6: Component) {

	~ignore_sortbutton_draw(component1, 2, 3, "Sort by name", component0, component1, component2, component3, component4, component5, component6)
	~ignore_sortbutton_draw(component2, 0, 1, "Legacy sort", component0, component1, component2, component3, component4, component5, component6)
	cc_deleteall(component3)
	val count7: Int = 0
	val int8: Int = 0
	val string0: String = ""
	val string1: String = ""
	val height9: Int = 0
	val int10: Int = 15
	val boolean11: Boolean = null
	val count12: Int = ignore_count
	if (count12 < 0) {
		if (VARBIT[8119] = 1) {
			if_settext("Loading ignore list<br>Please wait...", component5)
		} else {
			if_settext("You must set a name<br>before using this.", component5)
		}
		if_sethide(true, component0)
	} else if (count12 = 0) {
		if_settext("You may ignore users by using the button below, or by ${~text_device("right-clicking", "long pressing")} on a message from them and selecting to add them to your ignore list.", component5)
		if_sethide(true, component0)
	} else {
		boolean11 = ~on_mobile
		if (boolean11 = true) {
			int10 = scale(8, 5, int10)
		}
		if_settext("", component5)
		if_sethide(false, component0)
		_3640
		when (VARCINT[184]): Int {
			1 -> {
			
				_3641(false)
			}
			2 -> {
			
				_3642(true)
			}
			3 -> {
			
				_3642(false)
			}
		}
		_3643
		while (count7 < count12) {
			string0, string1 = ignore_getname(count7)
			cc_create(component3, ^iftype_text, int8)
			int8 = calc(int8 + 1)
			cc_settext(string0)
			cc_setsize(0, int10, ^setsize_minus, ^setsize_abs)
			cc_setposition(0, height9, ^setpos_abs_centre, ^setpos_abs_top)
			cc_setcolour(^white)
			cc_settextfont(p12_full)
			cc_settextalign(^settextalign_left, ^settextalign_centre, 0)
			cc_settextshadow(true)
			cc_setopbase("<col=ff9040>${string0}</col>")
			cc_setop(1, "Delete")
			.cc_create(component3, ^iftype_graphic, int8)
			int8 = calc(int8 + 1)
			.cc_setsize(14, 14, ^setsize_abs, ^setsize_abs)
			.cc_setposition(calc(parawidth(string0, 190, p12_full) + 3), calc(height9 + (int10 - 14) / 2), ^setpos_abs_left, ^setpos_abs_top)
			.cc_setgraphic("friends_changed_name")
			.cc_setgraphicshadow(0x333333)
			if (string_length(string1) > 0) {
				if (boolean11 = true) {
					cc_setop(10, "Reveal previous name")
					cc_setonop {
						ignore_op(event_opindex, event_opbase, event_com, cc_getid, .cc_getid, string1, string0)
					}
				} else {
					string1 = "Previous name:<br>${string1}"
					cc_setonmouserepeat {
						tooltip_mouserepeat(event_com, event_comsubid, component6, string1, 25, 190)
					}
					cc_setonmouseleave {
						deltooltip(component6)
					}
					cc_setonop {
						ignore_op(event_opindex, event_opbase, null, -1, -1, "null", "null")
					}
				}
				.cc_sethide(false)
			} else {
				cc_setonmouseover {
					deltooltip(component6)
				}
				.cc_sethide(true)
				cc_setonop {
					ignore_op(event_opindex, event_opbase, null, -1, -1, "null", "null")
				}
			}
			count7, height9 = calc(count7 + 1), calc(height9 + int10)
		}
		if (count12 >= 1) {
			height9 = calc(height9 + 5)
		}
	}
	if (height9 > if_getheight(component3)) {
		if_setscrollsize(0, height9, component3)
		~scrollbar_resize(component4, component3, if_getscrolly(component3))
	} else {
		if_setscrollsize(0, 0, component3)
		~scrollbar_resize(component4, component3, 0)
	}
	return 
}
