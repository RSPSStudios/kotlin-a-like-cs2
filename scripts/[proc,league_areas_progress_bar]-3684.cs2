// 3684 proc
fun league_areas_progress_bar(component0: Component, component1: Component, int2: Int, int3: Int) {

	if_setop(1, "", component0)
	if_setopbase("", component0)
	if (int3 = 1) {
		int2 = 0
	}
	val struct4: Struct = enum(int, struct, enum_2670, VARBIT[10032])
	val enum5: Enum = null
	val struct6: Struct = null
	val int7: Int = 0
	val int8: Int = 1
	val int9: Int = 0
	val comsubid10: Int = -1
	val struct11: Struct = ~script3682(int3)
	val int12: Int = -1
	val int13: Int = if_getwidth(component0)
	val string0: String = ""
	val int14: Int = -1
	val int15: Int = 0
	val graphic16: Graphic = struct_param(struct4, param_1022)
	val graphic17: Graphic = struct_param(struct4, param_1023)
	if (struct11 ! null) {
		int12 = struct_param(struct11, param_1010)
	}
	if (int12 ! -1 & int3 = 0) {
		int13 = calc(int13 - 15)
	}
	if (cc_find(component0, 0) = ^false) {
		cc_create(component0, ^iftype_rectangle, int9)
		cc_setsize(calc(int13 - 4), 29, ^setsize_abs, ^setsize_abs)
		cc_setposition(2, 2, ^setpos_abs_left, ^setpos_abs_top)
		cc_setfill(false)
		cc_setcolour(0x474745)
		int9 = calc(int9 + 1)
		cc_create(component0, ^iftype_graphic, int9)
		cc_setsize(calc(int13 - 6), 27, ^setsize_abs, ^setsize_abs)
		cc_setposition(3, 3, ^setpos_abs_left, ^setpos_abs_top)
		cc_setgraphic(struct_param(struct4, param_1025))
		cc_settiling(true)
		int9 = calc(int9 + 1)
		cc_create(component0, ^iftype_graphic, int9)
		cc_setsize(1, 27, ^setsize_abs, ^setsize_abs)
		cc_setposition(3, 3, ^setpos_abs_left, ^setpos_abs_top)
		cc_setgraphic(struct_param(struct4, param_1024))
		cc_settiling(true)
		int9 = calc(int9 + 1)
		if (int3 = 0) {
			cc_create(component0, ^iftype_text, int9)
			cc_setsize(int13, 0, ^setsize_abs, ^setsize_minus)
			cc_setposition(0, 0, ^setpos_abs_left, ^setpos_abs_top)
			cc_settextfont(struct_param(struct4, param_1032))
			cc_setcolour(struct_param(struct4, param_1029))
			cc_settextshadow(struct_param(struct4, param_1030))
			cc_settextalign(^settextalign_centre, ^settextalign_centre, 0)
			cc_settext("")
			int9 = calc(int9 + 1)
			cc_create(component0, ^iftype_rectangle, int9)
			cc_setsize(int13, 31, ^setsize_abs, ^setsize_abs)
			cc_setposition(0, 0, ^setpos_abs_left, ^setpos_abs_top)
			cc_setfill(false)
			cc_setcolour(0x0e0e0c)
			int9 = calc(int9 + 1)
			if (int12 ! -1) {
				cc_create(component0, ^iftype_graphic, int9)
				cc_setsize(30, 30, ^setsize_abs, ^setsize_abs)
				cc_setposition(0, 0, ^setpos_abs_right, ^setpos_abs_bottom)
				cc_setgraphic(graphic17)
				int9 = calc(int9 + 1)
			}
		} else {
			if (struct4 ! null) {
				enum5 = enum_3369
				if (enum5 ! null) {
					int7 = enum_getoutputcount(enum5)
					while (int8 < int7) {
						struct6 = enum(int, struct, enum5, int8)
						cc_create(component0, ^iftype_graphic, int9)
						cc_setsize(10, 31, ^setsize_abs, ^setsize_abs)
						int15 = struct_param(struct6, param_1010)
						int14 = scale(int15, int12, calc(int13 - 4))
						if (int14 <= 2) {
							int14 = 0
						} else if (int14 >= calc(int13 - 4)) {
							int14 = int13
						} else {
							int14 = calc(int14 + 2)
						}
						cc_setposition(calc(int14 - 5), 0, ^setpos_abs_left, ^setpos_abs_top)
						cc_setgraphic(struct_param(struct4, param_1031))
						if (int15 = 1) {
							string0 = "Area unlocked at ${tostring(int15)} task."
						} else {
							string0 = "Area unlocked at ${tostring(int15)} tasks."
						}
						if (~on_mobile = true) {
							cc_setop(1, "Show Threshold")
							cc_setonop({
								league_progress_bar_mobile_tooltip(event_com, event_comsubid, component1, string0, 512)
							})
						} else {
							cc_setop(1, "")
							cc_setonmouserepeat({
								tooltip_mouserepeat(event_com, event_comsubid, component1, string0, 25, 512)
							})
							cc_setonmouseleave({
								deltooltip(component1)
							})
						}
						int8 = calc(int8 + 1)
						int9 = calc(int9 + 1)
					}
				}
			}
			cc_create(component0, ^iftype_text, int9)
			cc_setsize(int13, 0, ^setsize_abs, ^setsize_minus)
			cc_setposition(0, 0, ^setpos_abs_left, ^setpos_abs_top)
			cc_settextfont(struct_param(struct4, param_1032))
			cc_setcolour(struct_param(struct4, param_1029))
			cc_settextshadow(struct_param(struct4, param_1030))
			cc_settextalign(^settextalign_centre, ^settextalign_centre, 0)
			cc_settext("")
			comsubid10 = int9
			int9 = calc(int9 + 1)
			cc_create(component0, ^iftype_rectangle, int9)
			cc_setsize(int13, 33, ^setsize_abs, ^setsize_abs)
			cc_setposition(0, 0, ^setpos_abs_left, ^setpos_abs_top)
			cc_setfill(false)
			cc_setcolour(0x0e0e0c)
			int9 = calc(int9 + 1)
			cc_create(component0, ^iftype_rectangle, int9)
			cc_setsize(calc(int13 - 2), 31, ^setsize_abs, ^setsize_abs)
			cc_setposition(1, 1, ^setpos_abs_left, ^setpos_abs_top)
			cc_setfill(false)
			cc_setcolour(0x0e0e0c)
			int9 = calc(int9 + 1)
		}
	}
	if (int3 = 0) {
		comsubid10 = 3
	}
	val width18: Int = calc(int13 - 4)
	val width19: Int = width18
	if (int12 ! -1 & int12 > 0) {
		width19 = scale(VARBIT[10046], int12, width18)
	}
	if (width19 > width18) {
		width19 = width18
	}
	if (cc_find(component0, 2) = ^true) {
		if (int2 = 1) {
			if (cc_getwidth > width19) {
				cc_setsize(0, cc_getheight, ^setsize_abs, ^setsize_abs)
			}
			if_setontimer({
				league_points_progress_bar_expand(component0, width19)
			}, component0)
		} else {
			cc_setsize(width19, cc_getheight, ^setsize_abs, ^setsize_abs)
		}
	}
	val int20: Int = -1
	if (comsubid10 ! -1 & cc_find(component0, comsubid10) = ^true) {
		if (int3 = 0 & int12 ! -1) {
			if (VARBIT[10046] >= int12) {
				if (VARBIT[10037] < 7) {
					cc_settext("You have completed enough tasks to unlock your next area!")
				} else {
					cc_settext("${~text_device("Click", "Tap")} here to select your next area!")
					if_setop(1, "View", component0)
					if_setopbase("<col=ff981f>Areas</col>", component0)
				}
			} else {
				int20 = calc(int12 - VARBIT[10046])
				if (int20 = 1) {
					cc_settext("${tostring(int20)} task until your next area.")
				} else {
					cc_settext("${tostring(int20)} tasks until your next area.")
				}
			}
		} else if (VARBIT[10046] = 1) {
			cc_settext("${tostring(VARBIT[10046])} task completed")
		} else {
			cc_settext("${tostring(VARBIT[10046])} tasks completed")
		}
	}
	if (int3 = 0 & cc_find(component0, 5) = ^true) {
		if (VARBIT[10046] >= int12) {
			cc_setgraphic(graphic16)
		} else {
			cc_setgraphic(graphic17)
		}
	}
	return 
}
