// 3785 proc
fun script3785(component0: Component, component1: Component, component2: Component, component3: Component, enum4: Enum) {

	if (enum4 = null) {
		if_close
		return 
	}
	cc_deleteall(component0)
	val int5: Int = 0
	val int6: Int = 0
	val int7: Int = calc(if_getwidth(component1) / 4)
	val int8: Int = calc(if_getheight(component1) / 2)
	val int9: Int = 0
	val int10: Int = 0
	val count11: Int = 0
	val count12: Int = enum_getoutputcount(enum4)
	val int13: Int = 0
	val int14: Int = 0
	val struct15: Struct = null
	val int16: Int = 0
	while (count11 < count12) {
		struct15 = enum(int, struct, enum4, count11)
		int13 = calc(int7 * int9)
		int14 = calc(int8 * int10)
		int16 = ~script3790(struct15)
		cc_create(component0, ^iftype_model, int5)
		int5 = calc(int5 + 1)
		if (int16 = 1) {
			cc_setobject(struct_param(struct15, param_1057), 1)
		} else {
			cc_setobject(struct_param(struct15, param_1061), 1)
		}
		cc_setsize(38, 38, ^setsize_abs, ^setsize_abs)
		cc_setposition(calc(int13 + int7 / 2 - 19), calc(int14 + 5), ^setpos_abs_left, ^setpos_abs_top)
		cc_setmodelangle(0, 0, cc_getmodelangle_x, cc_getmodelangle_y, cc_getmodelangle_z, 400)
		cc_create(component0, ^iftype_text, int5)
		int5 = calc(int5 + 1)
		cc_setposition(int13, calc(int14 + 48), ^setpos_abs_left, ^setpos_abs_top)
		cc_setsize(int7, 32, ^setsize_abs, ^setsize_abs)
		if (int16 = 1) {
			cc_setcolour(^green)
		} else {
			cc_setcolour(0x9f9f9f)
		}
		cc_settextfont(p12_full)
		cc_settextshadow(true)
		cc_settextalign(^settextalign_centre, ^settextalign_centre, 10)
		cc_settext(struct_param(struct15, param_1055))
		cc_create(component1, ^iftype_rectangle, int6)
		cc_setsize(calc(int7 - 6), calc(int8 - 6), ^setsize_abs, ^setsize_abs)
		cc_setposition(calc(3 + int13), calc(3 + int14), ^setpos_abs_left, ^setpos_abs_top)
		cc_setfill(true)
		cc_setcolour(^white)
		cc_settrans(255)
		int6 = calc(int6 + 1)
		cc_setop(1, "Select <col=ff9040>${struct_param(struct15, param_1055)}")
		cc_setonop {
			script3786(component2, struct15, component3)
		}
		if (~on_mobile = false) {
			cc_setonmouserepeat {
				cc_colour_swapper(component0, calc(int5 - 1), ^white)
			}
			if (int16 = 1) {
				cc_setonmouseleave {
					cc_colour_swapper(component0, calc(int5 - 1), ^green)
				}
			} else {
				cc_setonmouseleave {
					cc_colour_swapper(component0, calc(int5 - 1), 0x9f9f9f)
				}
			}
		}
		int9 = calc(int9 + 1)
		if (int9 = 4) {
			int9 = 0
			int10 = calc(int10 + 1)
		}
		count11 = calc(count11 + 1)
	}
	return 
}
