// 2310 proc
fun script2310(colour0: Int, colour1: Int, int2: Int, int3: Int, int4: Int, string0: String) {

	if (int4 = 1) {
		cc_setcolour(colour1)
		cc_settrans(int3)
		if (int3 >= 255) {
			cc_sethide(true)
		} else {
			cc_sethide(false)
		}
		if (string_length(string0) > 0) {
			.cc_setposition(0, scale(18, 50, 16384), ^setpos_abs_centre, ^setpos_3)
			.cc_sethide(false)
			.cc_settext(string0)
			.cc_setontimer({
				tob_hud_cleartext(event_comsubid, calc(clientclock + 150))
			})
		}
		if_setontimer(null, interface_28:1)
		return 
	}
	val int5: Int = -1
	val int6: Int = -1
	val int7: Int = -1
	int5, int6, int7 = ~hex_to_rgb(colour0)
	val int8: Int = -1
	val int9: Int = -1
	val int10: Int = -1
	int8, int9, int10 = ~hex_to_rgb(colour1)
	val int11: Int = calc((int8 - int5) / 20)
	val int12: Int = calc((int9 - int6) / 20)
	val int13: Int = calc((int10 - int7) / 20)
	val int14: Int = calc((int3 - int2) / 20)
	if (int11 = 0) {
		if (int8 > int5) {
			int11 = 1
		} else if (int8 < int5) {
			int11 = -1
		}
	}
	if (int12 = 0) {
		if (int9 > int6) {
			int12 = 1
		} else if (int9 < int6) {
			int12 = -1
		}
	}
	if (int13 = 0) {
		if (int10 > int7) {
			int13 = 1
		} else if (int10 < int7) {
			int13 = -1
		}
	}
	if (int14 = 0) {
		if (int3 > int2) {
			int14 = 1
		} else if (int3 < int2) {
			int14 = -1
		}
	}
	if (string_length(string0) > 0) {
		.cc_setposition(0, scale(18, 50, 16384), ^setpos_abs_centre, ^setpos_3)
		.cc_sethide(false)
		.cc_settext(string0)
		.cc_setontimer({
			tob_hud_cleartext(event_comsubid, calc(clientclock + 150))
		})
	}
	val int15: Int = calc(clientclock + 19)
	~script2312(int15, int5, int6, int7, int2, int11, int12, int13, int14, int8, int9, int10, int3)
	if_setontimer({
		script2311(cc_getid, .cc_getid, int15, int5, int6, int7, int2, int11, int12, int13, int14, int8, int9, int10, int3)
	}, interface_28:1)
	return 
}
