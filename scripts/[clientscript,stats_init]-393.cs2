// 393 clientscript
fun stats_init(component0: Component, component1: Component, int2: Int, int3: Int) {

	val string0: String = enum(int, string, enum_108, int2)
	val stat4: Stat = enum(int, stat, enum_681, int2)
	val boolean5: Boolean = enum(stat, boolean, enum_1497, stat4)
	cc_deleteall(component0)
	cc_create(component0, ^iftype_graphic, 0)
	cc_setposition(-2, -2, ^setpos_abs_left, ^setpos_abs_top)
	cc_setsize(36, 36, ^setsize_abs, ^setsize_abs)
	cc_setgraphic("miscgraphics,4")
	cc_create(component0, ^iftype_graphic, 1)
	cc_setposition(28, -2, ^setpos_abs_left, ^setpos_abs_top)
	cc_setsize(36, 36, ^setsize_abs, ^setsize_abs)
	cc_setgraphic("miscgraphics,5")
	cc_create(component0, ^iftype_graphic, 2)
	cc_setposition(calc(3 + int3), 4, ^setpos_abs_left, ^setpos_abs_top)
	cc_setsize(25, 25, ^setsize_abs, ^setsize_abs)
	cc_setgraphic(enum(stat, graphic, enum_255, stat4))
	cc_create(component0, ^iftype_text, 3)
	.cc_create(component0, ^iftype_text, 4)
	cc_setposition(32, 4, ^setpos_abs_left, ^setpos_abs_top)
	.cc_setposition(44, 16, ^setpos_abs_left, ^setpos_abs_top)
	cc_setsize(15, 12, ^setsize_abs, ^setsize_abs)
	.cc_setsize(15, 12, ^setsize_abs, ^setsize_abs)
	cc_setcolour(^yellow)
	.cc_setcolour(^yellow)
	cc_settextfont(p11_full)
	.cc_settextfont(p11_full)
	cc_settextalign(^settextalign_centre, ^settextalign_top, 0)
	.cc_settextalign(^settextalign_centre, ^settextalign_top, 0)
	cc_settextshadow(true)
	.cc_settextshadow(true)
	if_clearops(component0)
	if_setop(2, "View <col=ff981f>${string0}</col> guide", component0)
	if (~on_mobile = true) {
		if_setop(1, "Toggle <col=ff981f>${string0}</col> XP", component0)
	} else {
		if_setop(1, "", component0)
		if_setonmouseleave({
			deltooltip(component1)
		}, component0)
	}
	if_setonstattransmit({
		stats_setlevels(stat4, component0, string0, cc_getid, .cc_getid, component1){stat4, attack, strength, defence, ranged, magic}
	}, component0)
	if_setonvartransmit({
		stats_setlevels(stat4, component0, string0, cc_getid, .cc_getid, component1){VARP[427], VARP[1588], VARP[1437], VARP[1438], VARP[1439], VARP[1436], VARP[1435], VARP[1440], VARP[1453], VARP[1447], VARP[1452], VARP[1443], VARP[1449], VARP[1441], VARP[1442], VARP[1444], VARP[1450], VARP[1457], VARP[1445], VARP[1446], VARP[1454], VARP[1455], VARP[1456], VARP[1451], VARP[1448]}
	}, component0)
	~stats_setlevels(stat4, component0, string0, component1)
	if (boolean5 = false | map_members = ^true | VARCINT[103] = 1) {
		return 
	}
	cc_create(component0, ^iftype_graphic, 6)
	cc_setposition(-2, -2, ^setpos_abs_left, ^setpos_abs_top)
	cc_setsize(36, 36, ^setsize_abs, ^setsize_abs)
	cc_setgraphic("miscgraphics,4")
	cc_settrans(90)
	cc_create(component0, ^iftype_graphic, 7)
	cc_setposition(28, -2, ^setpos_abs_left, ^setpos_abs_top)
	cc_setsize(36, 36, ^setsize_abs, ^setsize_abs)
	cc_setgraphic("miscgraphics,6")
	cc_settrans(90)
	return 
}
