// 4043 clientscript
fun script4043(component0: Component, component1: Component, drop2: Component) {

	sound_synth(synth_2266, 1, 0)
	val int3: Int = ~script4048(component1)
	val component4: Component = null
	val int5: Int = 0
	val obj6: Obj = null
	val int7: Int = 0
	val int8: Int = ~script4048(drop2)
	val component9: Component = null
	val int10: Int = 0
	val obj11: Obj = null
	val int12: Int = 0
	val int13: Int = 0
	if (int8 = int3) {
		return 
	}
	if (int8 = -1 | int3 = -1) {
		return 
	}
	if (component1 ! null) {
		component4 = if_getlayer(component1)
		if (drop2 ! null) {
			component9 = if_getlayer(drop2)
			if (component4 = null | component9 = null) {
				return 
			}
			obj11, int10 = ~script4047(int8)
			int12 = enum(obj, int, enum_337, obj11)
			obj6, int5 = ~script4047(int3)
			int7 = enum(obj, int, enum_337, obj6)
			val int14: Int = 0
			val boolean15: Boolean = true
			val int16: Int = 0
			val int17: Int = 10000
			if (int8 = 0) {
				if (int12 = 0) {
					~script4045(int8, drop2, component9, obj6, int5, component0)
					~script4045(int3, component1, component4, null, 0, component0)
				} else if (int12 = int7) {
					int17 = ^max_32bit_int
					if (oc_stackable(obj11) = false) {
						int17 = 1
					}
					int13 = calc(int17 - int10)
					int13 = ~min(int13, int5)
					if (int13 <= 0) {
						return 
					}
					~script4045(int8, drop2, component9, obj11, calc(int10 + int13), component0)
					if (calc(int5 - int13) <= 0) {
						~script4045(int3, component1, component4, null, 0, component0)
					} else {
						~script4045(int3, component1, component4, obj6, calc(int5 - int13), component0)
					}
				} else if (int10 > 10000) {
					int14 = inv_total(inv, obj6)
					boolean15 = oc_stackable(obj6)
					int16 = ~inv_freespace(inv, inv_size(inv))
					if (int14 <= 0 & int16 > 0 | boolean15 = true & int14 > 0 & calc(^max_32bit_int - int14) >= int5) {
						~script4045(int3, component1, component4, null, 0, component0)
						~script4045(int8, drop2, component9, obj6, int5, component0)
					} else {
						return 
					}
				} else {
					~script4045(int8, drop2, component9, obj6, int5, component0)
					~script4045(int3, component1, component4, obj11, int10, component0)
				}
			} else if (int3 = 0) {
				if (int7 = 0) {
					return 
				}
				if (int12 = 0) {
					if (int5 > 10000) {
						return 
					}
					~script4045(int3, component1, component4, null, 0, component0)
					~script4045(int8, drop2, component9, obj6, int5, component0)
				} else if (int12 = int7) {
					if (oc_stackable(obj11) = false) {
						int17 = 1
					}
					int13 = calc(int17 - int10)
					int13 = ~min(int13, int5)
					if (int13 <= 0) {
						return 
					}
					~script4045(int8, drop2, component9, obj11, calc(int10 + int13), component0)
					if (calc(int5 - int13) <= 0) {
						~script4045(int3, component1, component4, null, 0, component0)
					} else {
						~script4045(int3, component1, component4, obj6, calc(int5 - int13), component0)
					}
				} else {
					if (int5 > 10000) {
						return 
					}
					~script4045(int3, component1, component4, obj11, int10, component0)
					~script4045(int8, drop2, component9, obj6, int5, component0)
				}
			} else {
				~script4045(int3, component1, component4, obj11, int10, component0)
				~script4045(int8, drop2, component9, obj6, int5, component0)
			}
			if_setontimer {
				script4044(int3, component1, component4, component0, 0)
			}
			if_setontimer {
				script4044(int8, drop2, component9, component0, 0)
			}
			return 
		}
		return 
	}
	return 
}
