// 2781 proc
fun pest_rewards_statbuttondraw(stat0: Stat, y1: Int, int2: Int, int3: Int, int4: Int, component5: Component, component6: Component, component7: Component, component8: Component, int9: Int, int10: Int): Int, Int {

	val int11: Int = enum(int, int, enum_2286, int4)
	cc_create(component6, ^iftype_text, int9)
	cc_setsize(int3, 32, ^setsize_abs, ^setsize_abs)
	cc_setposition(int2, y1, ^setpos_abs_left, ^setpos_abs_top)
	cc_settextalign(^settextalign_left, ^settextalign_bottom, 0)
	cc_settextfont(p11_full)
	cc_settextshadow(true)
	cc_settext(~pest_rewards_costpts(int11))
	cc_setop(1, "${enum(stat, string, enum_680, stat0)} XP: ${~pest_rewards_costpoints(int11)}")
	val string0: String = ""
	if (stat_base(stat0) < 25) {
		string0 = "The Void Knights will not offer training in skills for which you have a level under ${tostring(25)}."
		cc_setonop {
			pest_rewards_refuse(string0, component5, component6, component7, component8)
		}
	} else if (VARP[261] < int11) {
		string0 = "You need ${~pest_rewards_costpoints(int11)} to claim that reward."
		cc_setonop {
			pest_rewards_refuse(string0, component5, component6, component7, component8)
		}
	} else {
		cc_setonop {
			pest_rewards_select(int4, component5, component6, component7, component8)
		}
	}
	if (int10 = int4) {
		cc_setcolour(^white)
		cc_setonmouserepeatnull
		cc_setonmouseleavenull
	} else if (string_length(string0) > 0) {
		cc_setcolour(0x9f9f9f)
		cc_setonmouserepeatnull
		cc_setonmouseleavenull
	} else {
		cc_setcolour(0xff981f)
		cc_setonmouserepeat {
			cc_colour_swapper(event_com, event_comsubid, 0xffb83f)
		}
		cc_setonmouseleave {
			cc_colour_swapper(event_com, event_comsubid, 0xff981f)
		}
	}
	return calc(int9 + 1), calc(int2 + int3)
}
