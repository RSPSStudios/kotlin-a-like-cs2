// 1311 proc
fun tog_sidepanel_timer(component0: Component, component1: Component) {

	val int2: Int = 1
	if (VARP[101] > int2) {
		int2 = VARP[101]
	}
	val int3: Int = VARBIT[5099]
	if (VARBIT[5099] < VARP[101]) {
		int3 = calc(int3 - 1)
	}
	if (int3 <= 0 | int2 <= 0) {
		if_setsize(0, 0, ^setsize_abs, ^setsize_minus, component1)
		if_setontimer(null, component0)
		return 
	}
	if (int3 >= int2) {
		if_setsize(0, 0, ^setsize_minus, ^setsize_minus, component1)
		if_setontimer(null, component0)
		return 
	}
	val int4: Int = interpolate(0, int3, 0, int2, 16384)
	val int5: Int = calc(int3 * 30)
	if (int4 <= 0 | int5 <= 0) {
		if_setsize(0, 0, ^setsize_abs, ^setsize_minus, component1)
		if_setontimer(null, component0)
		return 
	}
	if_setsize(int4, 0, ^setsize_2, ^setsize_minus, component1)
	if_setontimer({
		tog_sidepanel_timer_update(component0, component1, int4, calc(int4 / int5), clientclock)
	}, component0)
	return 
}
